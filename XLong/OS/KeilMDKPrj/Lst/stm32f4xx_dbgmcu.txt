; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\stm32f4xx_dbgmcu.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\stm32f4xx_dbgmcu.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\..\..\CMSIS\4.5.0\CMSIS\Include -I..\APP -I..\APP\ST -I..\APP\uCOS -I..\..\BSP\KeilMDK -I..\..\BSP\Board\inc -I..\..\BSP\STM32F4xx\inc -I..\..\BSP\Xlong\inc -I..\..\..\uCOS\uC-CPU -I..\..\..\uCOS\uC-CPU\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uC-LIB -I..\..\..\uCOS\uC-LIB\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uCOS-III\Source -I..\..\..\uCOS\uCOS-III\Ports\ARM-Cortex-M4 -IC:\Users\V200\Desktop\XLong\XLong\OS\KeilMDKPrj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DSTM32F427_437xx -DSTM32F427_437xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\stm32f4xx_dbgmcu.crf ..\..\BSP\STM32F4xx\src\stm32f4xx_dbgmcu.c]
                          THUMB

                          AREA ||i.DBGMCU_APB1PeriphConfig||, CODE, READONLY, ALIGN=2

                  DBGMCU_APB1PeriphConfig PROC
;;;122      */
;;;123    void DBGMCU_APB1PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  b129              CBZ      r1,|L1.14|
;;;124    {
;;;125      /* Check the parameters */
;;;126      assert_param(IS_DBGMCU_APB1PERIPH(DBGMCU_Periph));
;;;127      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;128    
;;;129      if (NewState != DISABLE)
;;;130      {
;;;131        DBGMCU->APB1FZ |= DBGMCU_Periph;
000002  4a06              LDR      r2,|L1.28|
000004  6892              LDR      r2,[r2,#8]
000006  4302              ORRS     r2,r2,r0
000008  4b04              LDR      r3,|L1.28|
00000a  609a              STR      r2,[r3,#8]
00000c  e004              B        |L1.24|
                  |L1.14|
;;;132      }
;;;133      else
;;;134      {
;;;135        DBGMCU->APB1FZ &= ~DBGMCU_Periph;
00000e  4a03              LDR      r2,|L1.28|
000010  6892              LDR      r2,[r2,#8]
000012  4382              BICS     r2,r2,r0
000014  4b01              LDR      r3,|L1.28|
000016  609a              STR      r2,[r3,#8]
                  |L1.24|
;;;136      }
;;;137    }
000018  4770              BX       lr
;;;138    
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_APB2PeriphConfig||, CODE, READONLY, ALIGN=2

                  DBGMCU_APB2PeriphConfig PROC
;;;151      */
;;;152    void DBGMCU_APB2PeriphConfig(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  b129              CBZ      r1,|L2.14|
;;;153    {
;;;154      /* Check the parameters */
;;;155      assert_param(IS_DBGMCU_APB2PERIPH(DBGMCU_Periph));
;;;156      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;157    
;;;158      if (NewState != DISABLE)
;;;159      {
;;;160        DBGMCU->APB2FZ |= DBGMCU_Periph;
000002  4a06              LDR      r2,|L2.28|
000004  68d2              LDR      r2,[r2,#0xc]
000006  4302              ORRS     r2,r2,r0
000008  4b04              LDR      r3,|L2.28|
00000a  60da              STR      r2,[r3,#0xc]
00000c  e004              B        |L2.24|
                  |L2.14|
;;;161      }
;;;162      else
;;;163      {
;;;164        DBGMCU->APB2FZ &= ~DBGMCU_Periph;
00000e  4a03              LDR      r2,|L2.28|
000010  68d2              LDR      r2,[r2,#0xc]
000012  4382              BICS     r2,r2,r0
000014  4b01              LDR      r3,|L2.28|
000016  60da              STR      r2,[r3,#0xc]
                  |L2.24|
;;;165      }
;;;166    }
000018  4770              BX       lr
;;;167    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_Config||, CODE, READONLY, ALIGN=2

                  DBGMCU_Config PROC
;;;83       */
;;;84     void DBGMCU_Config(uint32_t DBGMCU_Periph, FunctionalState NewState)
000000  b129              CBZ      r1,|L3.14|
;;;85     {
;;;86       /* Check the parameters */
;;;87       assert_param(IS_DBGMCU_PERIPH(DBGMCU_Periph));
;;;88       assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;89       if (NewState != DISABLE)
;;;90       {
;;;91         DBGMCU->CR |= DBGMCU_Periph;
000002  4a06              LDR      r2,|L3.28|
000004  6852              LDR      r2,[r2,#4]
000006  4302              ORRS     r2,r2,r0
000008  4b04              LDR      r3,|L3.28|
00000a  605a              STR      r2,[r3,#4]
00000c  e004              B        |L3.24|
                  |L3.14|
;;;92       }
;;;93       else
;;;94       {
;;;95         DBGMCU->CR &= ~DBGMCU_Periph;
00000e  4a03              LDR      r2,|L3.28|
000010  6852              LDR      r2,[r2,#4]
000012  4382              BICS     r2,r2,r0
000014  4b01              LDR      r3,|L3.28|
000016  605a              STR      r2,[r3,#4]
                  |L3.24|
;;;96       }
;;;97     }
000018  4770              BX       lr
;;;98     
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetDEVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetDEVID PROC
;;;67       */
;;;68     uint32_t DBGMCU_GetDEVID(void)
000000  4802              LDR      r0,|L4.12|
;;;69     {
;;;70        return(DBGMCU->IDCODE & IDCODE_DEVID_MASK);
000002  6800              LDR      r0,[r0,#0]
000004  f3c0000b          UBFX     r0,r0,#0,#12
;;;71     }
000008  4770              BX       lr
;;;72     
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0xe0042000

                          AREA ||i.DBGMCU_GetREVID||, CODE, READONLY, ALIGN=2

                  DBGMCU_GetREVID PROC
;;;57       */
;;;58     uint32_t DBGMCU_GetREVID(void)
000000  4801              LDR      r0,|L5.8|
;;;59     {
;;;60        return(DBGMCU->IDCODE >> 16);
000002  6800              LDR      r0,[r0,#0]
000004  0c00              LSRS     r0,r0,#16
;;;61     }
000006  4770              BX       lr
;;;62     
                          ENDP

                  |L5.8|
                          DCD      0xe0042000

;*** Start embedded assembler ***

#line 1 "..\\..\\BSP\\STM32F4xx\\src\\stm32f4xx_dbgmcu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_dbgmcu_c_588a430f____REV16|
#line 388 "..\\..\\..\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___18_stm32f4xx_dbgmcu_c_588a430f____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_dbgmcu_c_588a430f____REVSH|
#line 402
|__asm___18_stm32f4xx_dbgmcu_c_588a430f____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f4xx_dbgmcu_c_588a430f____RRX|
#line 587
|__asm___18_stm32f4xx_dbgmcu_c_588a430f____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
