; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\cpu_c.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\cpu_c.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\..\..\CMSIS\4.5.0\CMSIS\Include -I..\APP -I..\APP\ST -I..\APP\uCOS -I..\..\BSP\KeilMDK -I..\..\BSP\Board\inc -I..\..\BSP\STM32F4xx\inc -I..\..\BSP\Xlong\inc -I..\..\..\uCOS\uC-CPU -I..\..\..\uCOS\uC-CPU\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uC-LIB -I..\..\..\uCOS\uC-LIB\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uCOS-III\Source -I..\..\..\uCOS\uCOS-III\Ports\ARM-Cortex-M4 -IC:\Users\V200\Desktop\XLong\XLong\OS\KeilMDKPrj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DSTM32F427_437xx -DSTM32F427_437xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\cpu_c.crf ..\..\..\uCOS\uC-CPU\Ports\ARM-Cortex-M4\cpu_c.c]
                          THUMB

                          AREA ||i.CPU_BitBandClr||, CODE, READONLY, ALIGN=2

                  CPU_BitBandClr PROC
;;;137    
;;;138    void  CPU_BitBandClr (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;139                          CPU_INT08U  bit_nbr)
;;;140    {
;;;141        CPU_ADDR  bit_word_off;
;;;142        CPU_ADDR  bit_word_addr;
;;;143    
;;;144    
;;;145        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L1.30|
;;;146            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L1.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L1.30|
;;;147            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;148            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;149    
;;;150          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000018  2400              MOVS     r4,#0
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L1.56|
                  |L1.30|
;;;151    
;;;152        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L1.56|
;;;153                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L1.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L1.56|
;;;154            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;155            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;156    
;;;157          *(volatile CPU_INT32U *)(bit_word_addr) = 0;
000034  2400              MOVS     r4,#0
000036  6014              STR      r4,[r2,#0]
                  |L1.56|
;;;158        }
;;;159    }
000038  bd10              POP      {r4,pc}
;;;160    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      0x200fffff
                  |L1.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_BitBandSet||, CODE, READONLY, ALIGN=2

                  CPU_BitBandSet PROC
;;;179    
;;;180    void  CPU_BitBandSet (CPU_ADDR    addr,
000000  b510              PUSH     {r4,lr}
;;;181                          CPU_INT08U  bit_nbr)
;;;182    {
;;;183        CPU_ADDR  bit_word_off;
;;;184        CPU_ADDR  bit_word_addr;
;;;185    
;;;186    
;;;187        if ((addr >= CPU_BIT_BAND_SRAM_REG_LO) &&
000002  f1b05f00          CMP      r0,#0x20000000
000006  d30a              BCC      |L2.30|
;;;188            (addr <= CPU_BIT_BAND_SRAM_REG_HI)) {
000008  4c0c              LDR      r4,|L2.60|
00000a  42a0              CMP      r0,r4
00000c  d807              BHI      |L2.30|
;;;189            bit_word_off  = ((addr - CPU_BIT_BAND_SRAM_REG_LO  ) * 32) + (bit_nbr * 4);
00000e  0144              LSLS     r4,r0,#5
000010  eb040381          ADD      r3,r4,r1,LSL #2
;;;190            bit_word_addr = CPU_BIT_BAND_SRAM_BASE   + bit_word_off;
000014  f1035208          ADD      r2,r3,#0x22000000
;;;191    
;;;192          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000018  2401              MOVS     r4,#1
00001a  6014              STR      r4,[r2,#0]
00001c  e00c              B        |L2.56|
                  |L2.30|
;;;193    
;;;194        } else if ((addr >= CPU_BIT_BAND_PERIPH_REG_LO) &&
00001e  f1b04f80          CMP      r0,#0x40000000
000022  d309              BCC      |L2.56|
;;;195                   (addr <= CPU_BIT_BAND_PERIPH_REG_HI)) {
000024  4c06              LDR      r4,|L2.64|
000026  42a0              CMP      r0,r4
000028  d806              BHI      |L2.56|
;;;196            bit_word_off  = ((addr - CPU_BIT_BAND_PERIPH_REG_LO) * 32) + (bit_nbr * 4);
00002a  0144              LSLS     r4,r0,#5
00002c  eb040381          ADD      r3,r4,r1,LSL #2
;;;197            bit_word_addr = CPU_BIT_BAND_PERIPH_BASE + bit_word_off;
000030  f1034284          ADD      r2,r3,#0x42000000
;;;198    
;;;199          *(volatile CPU_INT32U *)(bit_word_addr) = 1;
000034  2401              MOVS     r4,#1
000036  6014              STR      r4,[r2,#0]
                  |L2.56|
;;;200        }
;;;201    }
000038  bd10              POP      {r4,pc}
;;;202    
                          ENDP

00003a  0000              DCW      0x0000
                  |L2.60|
                          DCD      0x200fffff
                  |L2.64|
                          DCD      0x400fffff

                          AREA ||i.CPU_IntSrcDis||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcDis PROC
;;;252    
;;;253    void  CPU_IntSrcDis (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;254    {
000004  4604              MOV      r4,r0
;;;255        CPU_INT08U  group;
;;;256        CPU_INT08U  pos_max;
;;;257        CPU_INT08U  nbr;
;;;258        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;259    
;;;260    
;;;261        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d26b              BCS      |L3.230|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101429          DCB      0x0f,0x10,0x14,0x29
000018  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  1353              DCB      0x13,0x53
;;;262            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;263            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;264            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;265            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;266            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;267            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;268                 break;
00002c  e089              B        |L3.322|
;;;269    
;;;270    
;;;271                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;272            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;273            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;274            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;275            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;276            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;277            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;278                 break;
000038  e083              B        |L3.322|
;;;279    
;;;280            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;281                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  bf00              NOP      
;;;282                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_MEMFAULTENA;
000048  483f              LDR      r0,|L3.328|
00004a  6800              LDR      r0,[r0,#0]
00004c  f4203080          BIC      r0,r0,#0x10000
000050  493d              LDR      r1,|L3.328|
000052  6008              STR      r0,[r1,#0]
;;;283                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  bf00              NOP      
000058  4640              MOV      r0,r8
00005a  f7fffffe          BL       CPU_SR_Restore
00005e  bf00              NOP      
000060  bf00              NOP      
;;;284                 break;
000062  e06e              B        |L3.322|
;;;285    
;;;286            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;287                 CPU_CRITICAL_ENTER();
000064  bf00              NOP      
000066  bf00              NOP      
000068  f7fffffe          BL       CPU_SR_Save
00006c  4680              MOV      r8,r0
00006e  bf00              NOP      
000070  bf00              NOP      
;;;288                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_BUSFAULTENA;
000072  4835              LDR      r0,|L3.328|
000074  6800              LDR      r0,[r0,#0]
000076  f4203000          BIC      r0,r0,#0x20000
00007a  4933              LDR      r1,|L3.328|
00007c  6008              STR      r0,[r1,#0]
;;;289                 CPU_CRITICAL_EXIT();
00007e  bf00              NOP      
000080  bf00              NOP      
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       CPU_SR_Restore
000088  bf00              NOP      
00008a  bf00              NOP      
;;;290                 break;
00008c  e059              B        |L3.322|
;;;291    
;;;292            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;293                 CPU_CRITICAL_ENTER();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  f7fffffe          BL       CPU_SR_Save
000096  4680              MOV      r8,r0
000098  bf00              NOP      
00009a  bf00              NOP      
;;;294                 CPU_REG_NVIC_SHCSR &= ~CPU_REG_NVIC_SHCSR_USGFAULTENA;
00009c  482a              LDR      r0,|L3.328|
00009e  6800              LDR      r0,[r0,#0]
0000a0  f4202080          BIC      r0,r0,#0x40000
0000a4  4928              LDR      r1,|L3.328|
0000a6  6008              STR      r0,[r1,#0]
;;;295                 CPU_CRITICAL_EXIT();
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  4640              MOV      r0,r8
0000ae  f7fffffe          BL       CPU_SR_Restore
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;296                 break;
0000b6  e044              B        |L3.322|
;;;297    
;;;298            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;299                 CPU_CRITICAL_ENTER();
0000b8  bf00              NOP      
0000ba  bf00              NOP      
0000bc  f7fffffe          BL       CPU_SR_Save
0000c0  4680              MOV      r8,r0
0000c2  bf00              NOP      
0000c4  bf00              NOP      
;;;300                 CPU_REG_NVIC_ST_CTRL &= ~CPU_REG_NVIC_ST_CTRL_ENABLE;
0000c6  f04f20e0          MOV      r0,#0xe000e000
0000ca  6900              LDR      r0,[r0,#0x10]
0000cc  f0200001          BIC      r0,r0,#1
0000d0  f04f21e0          MOV      r1,#0xe000e000
0000d4  6108              STR      r0,[r1,#0x10]
;;;301                 CPU_CRITICAL_EXIT();
0000d6  bf00              NOP      
0000d8  bf00              NOP      
0000da  4640              MOV      r0,r8
0000dc  f7fffffe          BL       CPU_SR_Restore
0000e0  bf00              NOP      
0000e2  bf00              NOP      
;;;302                 break;
0000e4  e02d              B        |L3.322|
                  |L3.230|
;;;303    
;;;304    
;;;305                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;306            default:
;;;307                pos_max = CPU_INT_SRC_POS_MAX;
0000e6  f04f20e0          MOV      r0,#0xe000e000
0000ea  6840              LDR      r0,[r0,#4]
0000ec  1c40              ADDS     r0,r0,#1
0000ee  2110              MOVS     r1,#0x10
0000f0  eb011040          ADD      r0,r1,r0,LSL #5
0000f4  b2c6              UXTB     r6,r0
;;;308                if (pos < pos_max) {                                /* See Note #3.                                         */
0000f6  42b4              CMP      r4,r6
0000f8  da22              BGE      |L3.320|
;;;309                     group = (pos - 16) / 32;
0000fa  f1a40010          SUB      r0,r4,#0x10
0000fe  17c1              ASRS     r1,r0,#31
000100  eb0061d1          ADD      r1,r0,r1,LSR #27
000104  f3c11547          UBFX     r5,r1,#5,#8
;;;310                     nbr   = (pos - 16) % 32;
000108  17c1              ASRS     r1,r0,#31
00010a  eb0061d1          ADD      r1,r0,r1,LSR #27
00010e  1149              ASRS     r1,r1,#5
000110  eba01141          SUB      r1,r0,r1,LSL #5
000114  b2cf              UXTB     r7,r1
;;;311    
;;;312                     CPU_CRITICAL_ENTER();
000116  bf00              NOP      
000118  bf00              NOP      
00011a  f7fffffe          BL       CPU_SR_Save
00011e  4680              MOV      r8,r0
000120  bf00              NOP      
000122  bf00              NOP      
;;;313                     CPU_REG_NVIC_CLREN(group) = DEF_BIT(nbr);
000124  2001              MOVS     r0,#1
000126  40b8              LSLS     r0,r0,r7
000128  00a9              LSLS     r1,r5,#2
00012a  f10121e0          ADD      r1,r1,#0xe000e000
00012e  f8c10180          STR      r0,[r1,#0x180]
;;;314                     CPU_CRITICAL_EXIT();
000132  bf00              NOP      
000134  bf00              NOP      
000136  4640              MOV      r0,r8
000138  f7fffffe          BL       CPU_SR_Restore
00013c  bf00              NOP      
00013e  bf00              NOP      
                  |L3.320|
;;;315                 }
;;;316                 break;
000140  bf00              NOP      
                  |L3.322|
000142  bf00              NOP                            ;268
;;;317        }
;;;318    }
000144  e8bd81f0          POP      {r4-r8,pc}
;;;319    
                          ENDP

                  |L3.328|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcEn||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcEn PROC
;;;340    
;;;341    void  CPU_IntSrcEn (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;342    {
000004  4604              MOV      r4,r0
;;;343        CPU_INT08U  group;
;;;344        CPU_INT08U  nbr;
;;;345        CPU_INT08U  pos_max;
;;;346        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;347    
;;;348    
;;;349        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d26b              BCS      |L4.230|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101429          DCB      0x0f,0x10,0x14,0x29
000018  3e090a0b          DCB      0x3e,0x09,0x0a,0x0b
00001c  0c11120d          DCB      0x0c,0x11,0x12,0x0d
000020  1353              DCB      0x13,0x53
;;;350            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;351            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;352            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;353            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;354            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;355            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;356                 break;
00002c  e089              B        |L4.322|
;;;357    
;;;358    
;;;359                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;360            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;361            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;362            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;363            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000032  bf00              NOP      
;;;364            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000034  bf00              NOP      
;;;365            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000036  bf00              NOP      
;;;366                 break;
000038  e083              B        |L4.322|
;;;367    
;;;368            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;369                 CPU_CRITICAL_ENTER();
00003a  bf00              NOP      
00003c  bf00              NOP      
00003e  f7fffffe          BL       CPU_SR_Save
000042  4680              MOV      r8,r0
000044  bf00              NOP      
000046  bf00              NOP      
;;;370                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_MEMFAULTENA;
000048  483f              LDR      r0,|L4.328|
00004a  6800              LDR      r0,[r0,#0]
00004c  f4403080          ORR      r0,r0,#0x10000
000050  493d              LDR      r1,|L4.328|
000052  6008              STR      r0,[r1,#0]
;;;371                 CPU_CRITICAL_EXIT();
000054  bf00              NOP      
000056  bf00              NOP      
000058  4640              MOV      r0,r8
00005a  f7fffffe          BL       CPU_SR_Restore
00005e  bf00              NOP      
000060  bf00              NOP      
;;;372                 break;
000062  e06e              B        |L4.322|
;;;373    
;;;374            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;375                 CPU_CRITICAL_ENTER();
000064  bf00              NOP      
000066  bf00              NOP      
000068  f7fffffe          BL       CPU_SR_Save
00006c  4680              MOV      r8,r0
00006e  bf00              NOP      
000070  bf00              NOP      
;;;376                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_BUSFAULTENA;
000072  4835              LDR      r0,|L4.328|
000074  6800              LDR      r0,[r0,#0]
000076  f4403000          ORR      r0,r0,#0x20000
00007a  4933              LDR      r1,|L4.328|
00007c  6008              STR      r0,[r1,#0]
;;;377                 CPU_CRITICAL_EXIT();
00007e  bf00              NOP      
000080  bf00              NOP      
000082  4640              MOV      r0,r8
000084  f7fffffe          BL       CPU_SR_Restore
000088  bf00              NOP      
00008a  bf00              NOP      
;;;378                 break;
00008c  e059              B        |L4.322|
;;;379    
;;;380            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;381                 CPU_CRITICAL_ENTER();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  f7fffffe          BL       CPU_SR_Save
000096  4680              MOV      r8,r0
000098  bf00              NOP      
00009a  bf00              NOP      
;;;382                 CPU_REG_NVIC_SHCSR |= CPU_REG_NVIC_SHCSR_USGFAULTENA;
00009c  482a              LDR      r0,|L4.328|
00009e  6800              LDR      r0,[r0,#0]
0000a0  f4402080          ORR      r0,r0,#0x40000
0000a4  4928              LDR      r1,|L4.328|
0000a6  6008              STR      r0,[r1,#0]
;;;383                 CPU_CRITICAL_EXIT();
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  4640              MOV      r0,r8
0000ae  f7fffffe          BL       CPU_SR_Restore
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;384                 break;
0000b6  e044              B        |L4.322|
;;;385    
;;;386            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;387                 CPU_CRITICAL_ENTER();
0000b8  bf00              NOP      
0000ba  bf00              NOP      
0000bc  f7fffffe          BL       CPU_SR_Save
0000c0  4680              MOV      r8,r0
0000c2  bf00              NOP      
0000c4  bf00              NOP      
;;;388                 CPU_REG_NVIC_ST_CTRL |= CPU_REG_NVIC_ST_CTRL_ENABLE;
0000c6  f04f20e0          MOV      r0,#0xe000e000
0000ca  6900              LDR      r0,[r0,#0x10]
0000cc  f0400001          ORR      r0,r0,#1
0000d0  f04f21e0          MOV      r1,#0xe000e000
0000d4  6108              STR      r0,[r1,#0x10]
;;;389                 CPU_CRITICAL_EXIT();
0000d6  bf00              NOP      
0000d8  bf00              NOP      
0000da  4640              MOV      r0,r8
0000dc  f7fffffe          BL       CPU_SR_Restore
0000e0  bf00              NOP      
0000e2  bf00              NOP      
;;;390                 break;
0000e4  e02d              B        |L4.322|
                  |L4.230|
;;;391    
;;;392    
;;;393                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;394            default:
;;;395                pos_max = CPU_INT_SRC_POS_MAX;
0000e6  f04f20e0          MOV      r0,#0xe000e000
0000ea  6840              LDR      r0,[r0,#4]
0000ec  1c40              ADDS     r0,r0,#1
0000ee  2110              MOVS     r1,#0x10
0000f0  eb011040          ADD      r0,r1,r0,LSL #5
0000f4  b2c7              UXTB     r7,r0
;;;396                if (pos < pos_max) {                                /* See Note #3.                                         */
0000f6  42bc              CMP      r4,r7
0000f8  da22              BGE      |L4.320|
;;;397                     group = (pos - 16) / 32;
0000fa  f1a40010          SUB      r0,r4,#0x10
0000fe  17c1              ASRS     r1,r0,#31
000100  eb0061d1          ADD      r1,r0,r1,LSR #27
000104  f3c11547          UBFX     r5,r1,#5,#8
;;;398                     nbr   = (pos - 16) % 32;
000108  17c1              ASRS     r1,r0,#31
00010a  eb0061d1          ADD      r1,r0,r1,LSR #27
00010e  1149              ASRS     r1,r1,#5
000110  eba01141          SUB      r1,r0,r1,LSL #5
000114  b2ce              UXTB     r6,r1
;;;399    
;;;400                     CPU_CRITICAL_ENTER();
000116  bf00              NOP      
000118  bf00              NOP      
00011a  f7fffffe          BL       CPU_SR_Save
00011e  4680              MOV      r8,r0
000120  bf00              NOP      
000122  bf00              NOP      
;;;401                     CPU_REG_NVIC_SETEN(group) = DEF_BIT(nbr);
000124  2001              MOVS     r0,#1
000126  40b0              LSLS     r0,r0,r6
000128  00a9              LSLS     r1,r5,#2
00012a  f10121e0          ADD      r1,r1,#0xe000e000
00012e  f8c10100          STR      r0,[r1,#0x100]
;;;402                     CPU_CRITICAL_EXIT();
000132  bf00              NOP      
000134  bf00              NOP      
000136  4640              MOV      r0,r8
000138  f7fffffe          BL       CPU_SR_Restore
00013c  bf00              NOP      
00013e  bf00              NOP      
                  |L4.320|
;;;403                 }
;;;404                 break;
000140  bf00              NOP      
                  |L4.322|
000142  bf00              NOP                            ;356
;;;405        }
;;;406    }
000144  e8bd81f0          POP      {r4-r8,pc}
;;;407    
                          ENDP

                  |L4.328|
                          DCD      0xe000ed24

                          AREA ||i.CPU_IntSrcPendClr||, CODE, READONLY, ALIGN=1

                  CPU_IntSrcPendClr PROC
;;;439    
;;;440    void  CPU_IntSrcPendClr (CPU_INT08U  pos)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;441    
;;;442    {
000004  4604              MOV      r4,r0
;;;443        CPU_INT08U  group;
;;;444        CPU_INT08U  nbr;
;;;445        CPU_INT08U  pos_max;
;;;446        CPU_SR_ALLOC();
000006  f04f0800          MOV      r8,#0
;;;447    
;;;448    
;;;449        switch (pos) {
00000a  2c10              CMP      r4,#0x10
00000c  d219              BCS      |L5.66|
00000e  e8dff004          TBB      [pc,r4]
000012  080e              DCB      0x08,0x0e
000014  0f101115          DCB      0x0f,0x10,0x11,0x15
000018  16090a0b          DCB      0x16,0x09,0x0a,0x0b
00001c  0c12130d          DCB      0x0c,0x12,0x13,0x0d
000020  1417              DCB      0x14,0x17
;;;450            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;451            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;452            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;453            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;454            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;455            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;456                 break;
00002c  e037              B        |L5.158|
;;;457                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;458            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;459            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
00002e  bf00              NOP      
;;;460            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000030  bf00              NOP      
;;;461            case CPU_INT_MEM:                                       /* Memory management (see Note #2).                     */
000032  bf00              NOP      
;;;462            case CPU_INT_SVCALL:                                    /* SVCall (see Note #2).                                */
000034  bf00              NOP      
;;;463            case CPU_INT_DBGMON:                                    /* Debug monitor (see Note #2).                         */
000036  bf00              NOP      
;;;464            case CPU_INT_PENDSV:                                    /* PendSV (see Note #2).                                */
000038  bf00              NOP      
;;;465            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
00003a  bf00              NOP      
;;;466            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
00003c  bf00              NOP      
;;;467            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
00003e  bf00              NOP      
;;;468                 break;
000040  e02d              B        |L5.158|
                  |L5.66|
;;;469                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;470            default:
;;;471                pos_max = CPU_INT_SRC_POS_MAX;
000042  f04f20e0          MOV      r0,#0xe000e000
000046  6840              LDR      r0,[r0,#4]
000048  1c40              ADDS     r0,r0,#1
00004a  2110              MOVS     r1,#0x10
00004c  eb011040          ADD      r0,r1,r0,LSL #5
000050  b2c7              UXTB     r7,r0
;;;472                if (pos < pos_max) {                                /* See Note #3.                                         */
000052  42bc              CMP      r4,r7
000054  da22              BGE      |L5.156|
;;;473                     group = (pos - 16) / 32;
000056  f1a40010          SUB      r0,r4,#0x10
00005a  17c1              ASRS     r1,r0,#31
00005c  eb0061d1          ADD      r1,r0,r1,LSR #27
000060  f3c11547          UBFX     r5,r1,#5,#8
;;;474                     nbr   = (pos - 16) % 32;
000064  17c1              ASRS     r1,r0,#31
000066  eb0061d1          ADD      r1,r0,r1,LSR #27
00006a  1149              ASRS     r1,r1,#5
00006c  eba01141          SUB      r1,r0,r1,LSL #5
000070  b2ce              UXTB     r6,r1
;;;475    
;;;476                     CPU_CRITICAL_ENTER();
000072  bf00              NOP      
000074  bf00              NOP      
000076  f7fffffe          BL       CPU_SR_Save
00007a  4680              MOV      r8,r0
00007c  bf00              NOP      
00007e  bf00              NOP      
;;;477                     CPU_REG_NVIC_CLRPEND(group) = DEF_BIT(nbr);
000080  2001              MOVS     r0,#1
000082  40b0              LSLS     r0,r0,r6
000084  00a9              LSLS     r1,r5,#2
000086  f10121e0          ADD      r1,r1,#0xe000e000
00008a  f8c10280          STR      r0,[r1,#0x280]
;;;478                     CPU_CRITICAL_EXIT();
00008e  bf00              NOP      
000090  bf00              NOP      
000092  4640              MOV      r0,r8
000094  f7fffffe          BL       CPU_SR_Restore
000098  bf00              NOP      
00009a  bf00              NOP      
                  |L5.156|
;;;479                 }
;;;480                 break;
00009c  bf00              NOP      
                  |L5.158|
00009e  bf00              NOP                            ;456
;;;481        }
;;;482    }
0000a0  e8bd81f0          POP      {r4-r8,pc}
;;;483    
                          ENDP


                          AREA ||i.CPU_IntSrcPrioGet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioGet PROC
;;;640    
;;;641    CPU_INT16S  CPU_IntSrcPrioGet (CPU_INT08U  pos)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;642    {
000004  4606              MOV      r6,r0
;;;643        CPU_INT08U  group;
;;;644        CPU_INT08U  nbr;
;;;645        CPU_INT08U  pos_max;
;;;646        CPU_INT16S  prio;
;;;647        CPU_INT32U  temp;
;;;648        CPU_SR_ALLOC();
000006  f04f0a00          MOV      r10,#0
;;;649    
;;;650    
;;;651        switch (pos) {
00000a  2e10              CMP      r6,#0x10
00000c  d277              BCS      |L6.254|
00000e  e8dff006          TBB      [pc,r6]
000012  080f              DCB      0x08,0x0f
000014  1215182a          DCB      0x12,0x15,0x18,0x2a
000018  3d090a0b          DCB      0x3d,0x09,0x0a,0x0b
00001c  0c50630d          DCB      0x0c,0x50,0x63,0x0d
000020  778b              DCB      0x77,0x8b
;;;652            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;653            case CPU_INT_RSVD_07:
000022  bf00              NOP      
;;;654            case CPU_INT_RSVD_08:
000024  bf00              NOP      
;;;655            case CPU_INT_RSVD_09:
000026  bf00              NOP      
;;;656            case CPU_INT_RSVD_10:
000028  bf00              NOP      
;;;657            case CPU_INT_RSVD_13:
00002a  bf00              NOP      
;;;658                 prio = DEF_INT_16S_MIN_VAL;
00002c  4c64              LDR      r4,|L6.448|
;;;659                 break;
00002e  e0c3              B        |L6.440|
;;;660    
;;;661    
;;;662                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;663            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;664                 prio = -3;
000030  f06f0402          MVN      r4,#2
;;;665                 break;
000034  e0c0              B        |L6.440|
;;;666    
;;;667            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
;;;668                 prio = -2;
000036  f06f0401          MVN      r4,#1
;;;669                 break;
00003a  e0bd              B        |L6.440|
;;;670    
;;;671            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
;;;672                 prio = -1;
00003c  f04f34ff          MOV      r4,#0xffffffff
;;;673                 break;
000040  e0ba              B        |L6.440|
;;;674    
;;;675    
;;;676            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;677                 CPU_CRITICAL_ENTER();
000042  bf00              NOP      
000044  bf00              NOP      
000046  f7fffffe          BL       CPU_SR_Save
00004a  4682              MOV      r10,r0
00004c  bf00              NOP      
00004e  bf00              NOP      
;;;678                 temp = CPU_REG_NVIC_SHPRI1;
000050  485c              LDR      r0,|L6.452|
000052  6805              LDR      r5,[r0,#0]
;;;679                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000054  b2ec              UXTB     r4,r5
;;;680                 CPU_CRITICAL_EXIT();
000056  bf00              NOP      
000058  bf00              NOP      
00005a  4650              MOV      r0,r10
00005c  f7fffffe          BL       CPU_SR_Restore
000060  bf00              NOP      
000062  bf00              NOP      
;;;681                 break;
000064  e0a8              B        |L6.440|
;;;682    
;;;683    
;;;684            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;685                 CPU_CRITICAL_ENTER();
000066  bf00              NOP      
000068  bf00              NOP      
00006a  f7fffffe          BL       CPU_SR_Save
00006e  4682              MOV      r10,r0
000070  bf00              NOP      
000072  bf00              NOP      
;;;686                 temp = CPU_REG_NVIC_SHPRI1;
000074  4853              LDR      r0,|L6.452|
000076  6805              LDR      r5,[r0,#0]
;;;687                 prio = (temp >> (1 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000078  f3c52407          UBFX     r4,r5,#8,#8
;;;688                 CPU_CRITICAL_EXIT();
00007c  bf00              NOP      
00007e  bf00              NOP      
000080  4650              MOV      r0,r10
000082  f7fffffe          BL       CPU_SR_Restore
000086  bf00              NOP      
000088  bf00              NOP      
;;;689                 break;
00008a  e095              B        |L6.440|
;;;690    
;;;691    
;;;692            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;693                 CPU_CRITICAL_ENTER();
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  f7fffffe          BL       CPU_SR_Save
000094  4682              MOV      r10,r0
000096  bf00              NOP      
000098  bf00              NOP      
;;;694                 temp = CPU_REG_NVIC_SHPRI1;
00009a  484a              LDR      r0,|L6.452|
00009c  6805              LDR      r5,[r0,#0]
;;;695                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00009e  f3c54407          UBFX     r4,r5,#16,#8
;;;696                 CPU_CRITICAL_EXIT();
0000a2  bf00              NOP      
0000a4  bf00              NOP      
0000a6  4650              MOV      r0,r10
0000a8  f7fffffe          BL       CPU_SR_Restore
0000ac  bf00              NOP      
0000ae  bf00              NOP      
;;;697                 break;
0000b0  e082              B        |L6.440|
;;;698    
;;;699            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;700                 CPU_CRITICAL_ENTER();
0000b2  bf00              NOP      
0000b4  bf00              NOP      
0000b6  f7fffffe          BL       CPU_SR_Save
0000ba  4682              MOV      r10,r0
0000bc  bf00              NOP      
0000be  bf00              NOP      
;;;701                 temp = CPU_REG_NVIC_SHPRI2;
0000c0  4840              LDR      r0,|L6.452|
0000c2  1d00              ADDS     r0,r0,#4
0000c4  6805              LDR      r5,[r0,#0]
;;;702                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000c6  0e2c              LSRS     r4,r5,#24
;;;703                 CPU_CRITICAL_EXIT();
0000c8  bf00              NOP      
0000ca  bf00              NOP      
0000cc  4650              MOV      r0,r10
0000ce  f7fffffe          BL       CPU_SR_Restore
0000d2  bf00              NOP      
0000d4  bf00              NOP      
;;;704                 break;
0000d6  e06f              B        |L6.440|
;;;705    
;;;706            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;707                 CPU_CRITICAL_ENTER();
0000d8  bf00              NOP      
0000da  bf00              NOP      
0000dc  f7fffffe          BL       CPU_SR_Save
0000e0  4682              MOV      r10,r0
0000e2  bf00              NOP      
0000e4  bf00              NOP      
;;;708                 temp = CPU_REG_NVIC_SHPRI3;
0000e6  4837              LDR      r0,|L6.452|
0000e8  3008              ADDS     r0,r0,#8
0000ea  6805              LDR      r5,[r0,#0]
;;;709                 prio = (temp >> (0 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0000ec  b2ec              UXTB     r4,r5
;;;710                 CPU_CRITICAL_EXIT();
0000ee  bf00              NOP      
0000f0  bf00              NOP      
0000f2  4650              MOV      r0,r10
0000f4  f7fffffe          BL       CPU_SR_Restore
0000f8  bf00              NOP      
0000fa  bf00              NOP      
;;;711                 break;
0000fc  e05c              B        |L6.440|
                  |L6.254|
0000fe  e026              B        |L6.334|
;;;712    
;;;713            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;714                 CPU_CRITICAL_ENTER();
000100  bf00              NOP      
000102  bf00              NOP      
000104  f7fffffe          BL       CPU_SR_Save
000108  4682              MOV      r10,r0
00010a  bf00              NOP      
00010c  bf00              NOP      
;;;715                 temp = CPU_REG_NVIC_SHPRI3;
00010e  482d              LDR      r0,|L6.452|
000110  3008              ADDS     r0,r0,#8
000112  6805              LDR      r5,[r0,#0]
;;;716                 prio = (temp >> (2 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
000114  f3c54407          UBFX     r4,r5,#16,#8
;;;717                 CPU_CRITICAL_EXIT();
000118  bf00              NOP      
00011a  bf00              NOP      
00011c  4650              MOV      r0,r10
00011e  f7fffffe          BL       CPU_SR_Restore
000122  bf00              NOP      
000124  bf00              NOP      
;;;718                 break;
000126  e047              B        |L6.440|
;;;719    
;;;720            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;721                 CPU_CRITICAL_ENTER();
000128  bf00              NOP      
00012a  bf00              NOP      
00012c  f7fffffe          BL       CPU_SR_Save
000130  4682              MOV      r10,r0
000132  bf00              NOP      
000134  bf00              NOP      
;;;722                 temp = CPU_REG_NVIC_SHPRI3;
000136  4823              LDR      r0,|L6.452|
000138  3008              ADDS     r0,r0,#8
00013a  6805              LDR      r5,[r0,#0]
;;;723                 prio = (temp >> (3 * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
00013c  0e2c              LSRS     r4,r5,#24
;;;724                 CPU_CRITICAL_EXIT();
00013e  bf00              NOP      
000140  bf00              NOP      
000142  4650              MOV      r0,r10
000144  f7fffffe          BL       CPU_SR_Restore
000148  bf00              NOP      
00014a  bf00              NOP      
;;;725                 break;
00014c  e034              B        |L6.440|
                  |L6.334|
;;;726    
;;;727    
;;;728                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;729            default:
;;;730                pos_max = CPU_INT_SRC_POS_MAX;
00014e  f04f20e0          MOV      r0,#0xe000e000
000152  6840              LDR      r0,[r0,#4]
000154  1c40              ADDS     r0,r0,#1
000156  2110              MOVS     r1,#0x10
000158  eb011040          ADD      r0,r1,r0,LSL #5
00015c  f00009ff          AND      r9,r0,#0xff
;;;731                if (pos < pos_max) {                                /* See Note #3.                                         */
000160  454e              CMP      r6,r9
000162  da27              BGE      |L6.436|
;;;732                     group = (pos - 16) / 4;
000164  f1a60010          SUB      r0,r6,#0x10
000168  17c1              ASRS     r1,r0,#31
00016a  eb007191          ADD      r1,r0,r1,LSR #30
00016e  f3c10787          UBFX     r7,r1,#2,#8
;;;733                     nbr   = (pos - 16) % 4;
000172  17c1              ASRS     r1,r0,#31
000174  eb007191          ADD      r1,r0,r1,LSR #30
000178  1089              ASRS     r1,r1,#2
00017a  eba00181          SUB      r1,r0,r1,LSL #2
00017e  f00108ff          AND      r8,r1,#0xff
;;;734    
;;;735                     CPU_CRITICAL_ENTER();
000182  bf00              NOP      
000184  bf00              NOP      
000186  f7fffffe          BL       CPU_SR_Save
00018a  4682              MOV      r10,r0
00018c  bf00              NOP      
00018e  bf00              NOP      
;;;736                     temp  = CPU_REG_NVIC_PRIO(group);
000190  00b8              LSLS     r0,r7,#2
000192  f10020e0          ADD      r0,r0,#0xe000e000
000196  f8d05400          LDR      r5,[r0,#0x400]
;;;737                     CPU_CRITICAL_EXIT();
00019a  bf00              NOP      
00019c  bf00              NOP      
00019e  4650              MOV      r0,r10
0001a0  f7fffffe          BL       CPU_SR_Restore
0001a4  bf00              NOP      
0001a6  bf00              NOP      
;;;738    
;;;739                     prio  = (temp >> (nbr * DEF_OCTET_NBR_BITS)) & DEF_OCTET_MASK;
0001a8  ea4f00c8          LSL      r0,r8,#3
0001ac  fa25f000          LSR      r0,r5,r0
0001b0  b2c4              UXTB     r4,r0
0001b2  e000              B        |L6.438|
                  |L6.436|
;;;740                 } else {
;;;741                     prio  = DEF_INT_16S_MIN_VAL;
0001b4  4c02              LDR      r4,|L6.448|
                  |L6.438|
;;;742                 }
;;;743                 break;
0001b6  bf00              NOP      
                  |L6.440|
0001b8  bf00              NOP                            ;659
;;;744        }
;;;745    
;;;746        return (prio);
0001ba  4620              MOV      r0,r4
;;;747    }
0001bc  e8bd87f0          POP      {r4-r10,pc}
;;;748    
                          ENDP

                  |L6.448|
                          DCD      0xffff8000
                  |L6.452|
                          DCD      0xe000ed18

                          AREA ||i.CPU_IntSrcPrioSet||, CODE, READONLY, ALIGN=2

                  CPU_IntSrcPrioSet PROC
;;;510    
;;;511    void  CPU_IntSrcPrioSet (CPU_INT08U  pos,
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;512                             CPU_INT08U  prio)
;;;513    {
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;514        CPU_INT08U  group;
;;;515        CPU_INT08U  nbr;
;;;516        CPU_INT08U  pos_max;
;;;517        CPU_INT32U  temp;
;;;518        CPU_SR_ALLOC();
000008  f04f0a00          MOV      r10,#0
;;;519    
;;;520    
;;;521        switch (pos) {
00000c  2e10              CMP      r6,#0x10
00000e  d27c              BCS      |L7.266|
000010  e8dff006          TBB      [pc,r6]
000014  080e0f10          DCB      0x08,0x0e,0x0f,0x10
000018  11263c09          DCB      0x11,0x26,0x3c,0x09
00001c  0a0b0c52          DCB      0x0a,0x0b,0x0c,0x52
000020  690d8198          DCB      0x69,0x0d,0x81,0x98
;;;522            case CPU_INT_STK_PTR:                                   /* ---------------- INVALID OR RESERVED --------------- */
;;;523            case CPU_INT_RSVD_07:
000024  bf00              NOP      
;;;524            case CPU_INT_RSVD_08:
000026  bf00              NOP      
;;;525            case CPU_INT_RSVD_09:
000028  bf00              NOP      
;;;526            case CPU_INT_RSVD_10:
00002a  bf00              NOP      
;;;527            case CPU_INT_RSVD_13:
00002c  bf00              NOP      
;;;528                 break;
00002e  e0dd              B        |L7.492|
;;;529    
;;;530    
;;;531                                                                    /* ----------------- SYSTEM EXCEPTIONS ---------------- */
;;;532            case CPU_INT_RESET:                                     /* Reset (see Note #2).                                 */
;;;533            case CPU_INT_NMI:                                       /* Non-maskable interrupt (see Note #2).                */
000030  bf00              NOP      
;;;534            case CPU_INT_HFAULT:                                    /* Hard fault (see Note #2).                            */
000032  bf00              NOP      
;;;535                 break;
000034  e0da              B        |L7.492|
;;;536    
;;;537            case CPU_INT_MEM:                                       /* Memory management.                                   */
;;;538                 CPU_CRITICAL_ENTER();
000036  bf00              NOP      
000038  bf00              NOP      
00003a  f7fffffe          BL       CPU_SR_Save
00003e  4682              MOV      r10,r0
000040  bf00              NOP      
000042  bf00              NOP      
;;;539                 temp                 = CPU_REG_NVIC_SHPRI1;
000044  486b              LDR      r0,|L7.500|
000046  6804              LDR      r4,[r0,#0]
;;;540                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
000048  f02404ff          BIC      r4,r4,#0xff
;;;541                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
00004c  432c              ORRS     r4,r4,r5
;;;542                 CPU_REG_NVIC_SHPRI1  = temp;
00004e  6004              STR      r4,[r0,#0]
;;;543                 CPU_CRITICAL_EXIT();
000050  bf00              NOP      
000052  bf00              NOP      
000054  4650              MOV      r0,r10
000056  f7fffffe          BL       CPU_SR_Restore
00005a  bf00              NOP      
00005c  bf00              NOP      
;;;544                 break;
00005e  e0c5              B        |L7.492|
;;;545    
;;;546            case CPU_INT_BUSFAULT:                                  /* Bus fault.                                           */
;;;547                 CPU_CRITICAL_ENTER();
000060  bf00              NOP      
000062  bf00              NOP      
000064  f7fffffe          BL       CPU_SR_Save
000068  4682              MOV      r10,r0
00006a  bf00              NOP      
00006c  bf00              NOP      
;;;548                 temp                 = CPU_REG_NVIC_SHPRI1;
00006e  4861              LDR      r0,|L7.500|
000070  6804              LDR      r4,[r0,#0]
;;;549                 temp                &= ~(DEF_OCTET_MASK << (1 * DEF_OCTET_NBR_BITS));
000072  f424447f          BIC      r4,r4,#0xff00
;;;550                 temp                |=  (prio           << (1 * DEF_OCTET_NBR_BITS));
000076  ea442405          ORR      r4,r4,r5,LSL #8
;;;551                 CPU_REG_NVIC_SHPRI1  = temp;
00007a  6004              STR      r4,[r0,#0]
;;;552                 CPU_CRITICAL_EXIT();
00007c  bf00              NOP      
00007e  bf00              NOP      
000080  4650              MOV      r0,r10
000082  f7fffffe          BL       CPU_SR_Restore
000086  bf00              NOP      
000088  bf00              NOP      
;;;553                 break;
00008a  e0af              B        |L7.492|
;;;554    
;;;555            case CPU_INT_USAGEFAULT:                                /* Usage fault.                                         */
;;;556                 CPU_CRITICAL_ENTER();
00008c  bf00              NOP      
00008e  bf00              NOP      
000090  f7fffffe          BL       CPU_SR_Save
000094  4682              MOV      r10,r0
000096  bf00              NOP      
000098  bf00              NOP      
;;;557                 temp                 = CPU_REG_NVIC_SHPRI1;
00009a  4856              LDR      r0,|L7.500|
00009c  6804              LDR      r4,[r0,#0]
;;;558                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
00009e  f424047f          BIC      r4,r4,#0xff0000
;;;559                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
0000a2  ea444405          ORR      r4,r4,r5,LSL #16
;;;560                 CPU_REG_NVIC_SHPRI1  = temp;
0000a6  6004              STR      r4,[r0,#0]
;;;561                 CPU_CRITICAL_EXIT();
0000a8  bf00              NOP      
0000aa  bf00              NOP      
0000ac  4650              MOV      r0,r10
0000ae  f7fffffe          BL       CPU_SR_Restore
0000b2  bf00              NOP      
0000b4  bf00              NOP      
;;;562                 break;
0000b6  e099              B        |L7.492|
;;;563    
;;;564            case CPU_INT_SVCALL:                                    /* SVCall.                                              */
;;;565                 CPU_CRITICAL_ENTER();
0000b8  bf00              NOP      
0000ba  bf00              NOP      
0000bc  f7fffffe          BL       CPU_SR_Save
0000c0  4682              MOV      r10,r0
0000c2  bf00              NOP      
0000c4  bf00              NOP      
;;;566                 temp                 = CPU_REG_NVIC_SHPRI2;
0000c6  484b              LDR      r0,|L7.500|
0000c8  1d00              ADDS     r0,r0,#4
0000ca  6804              LDR      r4,[r0,#0]
;;;567                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
0000cc  f024447f          BIC      r4,r4,#0xff000000
;;;568                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
0000d0  ea446405          ORR      r4,r4,r5,LSL #24
;;;569                 CPU_REG_NVIC_SHPRI2  = temp;
0000d4  6004              STR      r4,[r0,#0]
;;;570                 CPU_CRITICAL_EXIT();
0000d6  bf00              NOP      
0000d8  bf00              NOP      
0000da  4650              MOV      r0,r10
0000dc  f7fffffe          BL       CPU_SR_Restore
0000e0  bf00              NOP      
0000e2  bf00              NOP      
;;;571                 break;
0000e4  e082              B        |L7.492|
;;;572    
;;;573            case CPU_INT_DBGMON:                                    /* Debug monitor.                                       */
;;;574                 CPU_CRITICAL_ENTER();
0000e6  bf00              NOP      
0000e8  bf00              NOP      
0000ea  f7fffffe          BL       CPU_SR_Save
0000ee  4682              MOV      r10,r0
0000f0  bf00              NOP      
0000f2  bf00              NOP      
;;;575                 temp                = CPU_REG_NVIC_SHPRI3;
0000f4  483f              LDR      r0,|L7.500|
0000f6  3008              ADDS     r0,r0,#8
0000f8  6804              LDR      r4,[r0,#0]
;;;576                 temp                &= ~(DEF_OCTET_MASK << (0 * DEF_OCTET_NBR_BITS));
0000fa  f02404ff          BIC      r4,r4,#0xff
;;;577                 temp                |=  (prio           << (0 * DEF_OCTET_NBR_BITS));
0000fe  432c              ORRS     r4,r4,r5
;;;578                 CPU_REG_NVIC_SHPRI3  = temp;
000100  6004              STR      r4,[r0,#0]
;;;579                 CPU_CRITICAL_EXIT();
000102  bf00              NOP      
000104  bf00              NOP      
000106  4650              MOV      r0,r10
000108  e000              B        |L7.268|
                  |L7.266|
00010a  e032              B        |L7.370|
                  |L7.268|
00010c  f7fffffe          BL       CPU_SR_Restore
000110  bf00              NOP      
000112  bf00              NOP      
;;;580                 break;
000114  e06a              B        |L7.492|
;;;581    
;;;582            case CPU_INT_PENDSV:                                    /* PendSV.                                              */
;;;583                 CPU_CRITICAL_ENTER();
000116  bf00              NOP      
000118  bf00              NOP      
00011a  f7fffffe          BL       CPU_SR_Save
00011e  4682              MOV      r10,r0
000120  bf00              NOP      
000122  bf00              NOP      
;;;584                 temp                 = CPU_REG_NVIC_SHPRI3;
000124  4833              LDR      r0,|L7.500|
000126  3008              ADDS     r0,r0,#8
000128  6804              LDR      r4,[r0,#0]
;;;585                 temp                &= ~(DEF_OCTET_MASK << (2 * DEF_OCTET_NBR_BITS));
00012a  f424047f          BIC      r4,r4,#0xff0000
;;;586                 temp                |=  (prio           << (2 * DEF_OCTET_NBR_BITS));
00012e  ea444405          ORR      r4,r4,r5,LSL #16
;;;587                 CPU_REG_NVIC_SHPRI3  = temp;
000132  6004              STR      r4,[r0,#0]
;;;588                 CPU_CRITICAL_EXIT();
000134  bf00              NOP      
000136  bf00              NOP      
000138  4650              MOV      r0,r10
00013a  f7fffffe          BL       CPU_SR_Restore
00013e  bf00              NOP      
000140  bf00              NOP      
;;;589                 break;
000142  e053              B        |L7.492|
;;;590    
;;;591            case CPU_INT_SYSTICK:                                   /* SysTick.                                             */
;;;592                 CPU_CRITICAL_ENTER();
000144  bf00              NOP      
000146  bf00              NOP      
000148  f7fffffe          BL       CPU_SR_Save
00014c  4682              MOV      r10,r0
00014e  bf00              NOP      
000150  bf00              NOP      
;;;593                 temp                 = CPU_REG_NVIC_SHPRI3;
000152  4828              LDR      r0,|L7.500|
000154  3008              ADDS     r0,r0,#8
000156  6804              LDR      r4,[r0,#0]
;;;594                 temp                &= ~((CPU_INT32U)DEF_OCTET_MASK << (3 * DEF_OCTET_NBR_BITS));
000158  f024447f          BIC      r4,r4,#0xff000000
;;;595                 temp                |=  (prio                       << (3 * DEF_OCTET_NBR_BITS));
00015c  ea446405          ORR      r4,r4,r5,LSL #24
;;;596                 CPU_REG_NVIC_SHPRI3  = temp;
000160  6004              STR      r4,[r0,#0]
;;;597                 CPU_CRITICAL_EXIT();
000162  bf00              NOP      
000164  bf00              NOP      
000166  4650              MOV      r0,r10
000168  f7fffffe          BL       CPU_SR_Restore
00016c  bf00              NOP      
00016e  bf00              NOP      
;;;598                 break;
000170  e03c              B        |L7.492|
                  |L7.370|
;;;599    
;;;600    
;;;601                                                                    /* ---------------- EXTERNAL INTERRUPT ---------------- */
;;;602            default:
;;;603                pos_max = CPU_INT_SRC_POS_MAX;
000172  f04f20e0          MOV      r0,#0xe000e000
000176  6840              LDR      r0,[r0,#4]
000178  1c40              ADDS     r0,r0,#1
00017a  2110              MOVS     r1,#0x10
00017c  eb011040          ADD      r0,r1,r0,LSL #5
000180  f00009ff          AND      r9,r0,#0xff
;;;604                if (pos < pos_max) {                                /* See Note #3.                                         */
000184  454e              CMP      r6,r9
000186  da30              BGE      |L7.490|
;;;605                     group                    = (pos - 16) / 4;
000188  f1a60010          SUB      r0,r6,#0x10
00018c  17c1              ASRS     r1,r0,#31
00018e  eb007191          ADD      r1,r0,r1,LSR #30
000192  f3c10787          UBFX     r7,r1,#2,#8
;;;606                     nbr                      = (pos - 16) % 4;
000196  17c1              ASRS     r1,r0,#31
000198  eb007191          ADD      r1,r0,r1,LSR #30
00019c  1089              ASRS     r1,r1,#2
00019e  eba00181          SUB      r1,r0,r1,LSL #2
0001a2  f00108ff          AND      r8,r1,#0xff
;;;607    
;;;608                     CPU_CRITICAL_ENTER();
0001a6  bf00              NOP      
0001a8  bf00              NOP      
0001aa  f7fffffe          BL       CPU_SR_Save
0001ae  4682              MOV      r10,r0
0001b0  bf00              NOP      
0001b2  bf00              NOP      
;;;609                     temp                     = CPU_REG_NVIC_PRIO(group);
0001b4  00b8              LSLS     r0,r7,#2
0001b6  f10020e0          ADD      r0,r0,#0xe000e000
0001ba  f8d04400          LDR      r4,[r0,#0x400]
;;;610                     temp                    &= ~(DEF_OCTET_MASK << (nbr * DEF_OCTET_NBR_BITS));
0001be  ea4f01c8          LSL      r1,r8,#3
0001c2  20ff              MOVS     r0,#0xff
0001c4  4088              LSLS     r0,r0,r1
0001c6  4384              BICS     r4,r4,r0
;;;611                     temp                    |=  (prio           << (nbr * DEF_OCTET_NBR_BITS));
0001c8  ea4f01c8          LSL      r1,r8,#3
0001cc  fa05f001          LSL      r0,r5,r1
0001d0  4304              ORRS     r4,r4,r0
;;;612                     CPU_REG_NVIC_PRIO(group) = temp;
0001d2  00b8              LSLS     r0,r7,#2
0001d4  f10020e0          ADD      r0,r0,#0xe000e000
0001d8  f8c04400          STR      r4,[r0,#0x400]
;;;613                     CPU_CRITICAL_EXIT();
0001dc  bf00              NOP      
0001de  bf00              NOP      
0001e0  4650              MOV      r0,r10
0001e2  f7fffffe          BL       CPU_SR_Restore
0001e6  bf00              NOP      
0001e8  bf00              NOP      
                  |L7.490|
;;;614                 }
;;;615                 break;
0001ea  bf00              NOP      
                  |L7.492|
0001ec  bf00              NOP                            ;528
;;;616        }
;;;617    }
0001ee  e8bd87f0          POP      {r4-r10,pc}
;;;618    
                          ENDP

0001f2  0000              DCW      0x0000
                  |L7.500|
                          DCD      0xe000ed18
