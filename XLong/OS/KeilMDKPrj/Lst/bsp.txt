; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\..\..\CMSIS\4.5.0\CMSIS\Include -I..\APP -I..\APP\ST -I..\APP\uCOS -I..\..\BSP\KeilMDK -I..\..\BSP\Board\inc -I..\..\BSP\STM32F4xx\inc -I..\..\BSP\Xlong\inc -I..\..\..\uCOS\uC-CPU -I..\..\..\uCOS\uC-CPU\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uC-LIB -I..\..\..\uCOS\uC-LIB\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uCOS-III\Source -I..\..\..\uCOS\uCOS-III\Ports\ARM-Cortex-M4 -IC:\Users\V200\Desktop\XLong\XLong\OS\KeilMDKPrj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DSTM32F427_437xx -DSTM32F427_437xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\bsp.crf ..\..\BSP\Board\src\bsp.c]
                          THUMB

                          AREA ||i.BSP_CPU_ClkFreq||, CODE, READONLY, ALIGN=1

                  BSP_CPU_ClkFreq PROC
;;;392    
;;;393    CPU_INT32U  BSP_CPU_ClkFreq (void)
000000  b51f              PUSH     {r0-r4,lr}
;;;394    {
;;;395        RCC_ClocksTypeDef  rcc_clocks;
;;;396    
;;;397    
;;;398        RCC_GetClocksFreq(&rcc_clocks);
000002  4668              MOV      r0,sp
000004  f7fffffe          BL       RCC_GetClocksFreq
;;;399    
;;;400        return ((CPU_INT32U)rcc_clocks.HCLK_Frequency);
000008  9801              LDR      r0,[sp,#4]
;;;401    }
00000a  b004              ADD      sp,sp,#0x10
00000c  bd10              POP      {r4,pc}
;;;402    
                          ENDP


                          AREA ||i.BSP_Init||, CODE, READONLY, ALIGN=2

                  BSP_Init PROC
;;;247    
;;;248    void  BSP_Init (void)
000000  b570              PUSH     {r4-r6,lr}
;;;249    {
;;;250        CPU_INT32U reg_val;
;;;251        CPU_INT32U hse_rdyctr;
;;;252    
;;;253    
;;;254        BSP_IntInit();
000002  f7fffffe          BL       BSP_IntInit
;;;255                                                                    /* ---------- RESET CLOCK CONFIG. REGISTERS ----------- */
;;;256    
;;;257        DEF_BIT_SET(BSP_REG32_RCC_CR,BSP_BIT_RCC_CR_HSION);         /* Set HSION bit                                        */
000006  4840              LDR      r0,|L2.264|
000008  6800              LDR      r0,[r0,#0]
00000a  f0400001          ORR      r0,r0,#1
00000e  493e              LDR      r1,|L2.264|
000010  6008              STR      r0,[r1,#0]
;;;258                                                                    // Internal high-speed clock enable  16M
;;;259    	
;;;260        BSP_REG32_RCC_CFGR  = (CPU_INT32U)0u;                       /* Reset CFGR register                                  */
000012  2000              MOVS     r0,#0
000014  493c              LDR      r1,|L2.264|
000016  3108              ADDS     r1,r1,#8
000018  6008              STR      r0,[r1,#0]
;;;261    	                                                            // HSI oscillator selected as system clock , 无分频
;;;262    
;;;263        BSP_REG32_RCC_CR    &= 0xFEF6FFFFu;                         /* Reset HSEON, CSSON and PLLON bits 关闭               */
00001a  483b              LDR      r0,|L2.264|
00001c  6800              LDR      r0,[r0,#0]
00001e  493b              LDR      r1,|L2.268|
000020  4008              ANDS     r0,r0,r1
000022  4939              LDR      r1,|L2.264|
000024  6008              STR      r0,[r1,#0]
;;;264    	                                                            // PLL OFF  
;;;265    	                                                            // Clock security system OFF (Clock detector OFF)
;;;266    	                                                            // HSE oscillator OFF
;;;267    
;;;268        BSP_REG32_RCC_PLLCFGR = BSP_MSK_RCC_PLLCFGR_RST;            /* Reset PLLCFGR register    0x24003010u                */
000026  483a              LDR      r0,|L2.272|
000028  1d09              ADDS     r1,r1,#4
00002a  6008              STR      r0,[r1,#0]
;;;269                                                                    // Main PLL(PLL) and audio PLL (PLLI2S) entry clock source HSI	
;;;270    	                                                            // 所有 PLL --> PLLM  16 分频 (源时钟输入分频)
;;;271    																// Main PLL --> PLLN 192 倍频
;;;272                                                                    // Main PLL --> PLLP   2 分频	
;;;273    																// Main PLL --> PLLQ   4 分频
;;;274    
;;;275        DEF_BIT_CLR(BSP_REG32_RCC_CR, BSP_BIT_RCC_CR_HSEBYP);       /* Reset HSEBYP bit                                     */
00002c  1f08              SUBS     r0,r1,#4
00002e  6800              LDR      r0,[r0,#0]
000030  f4202080          BIC      r0,r0,#0x40000
000034  1f09              SUBS     r1,r1,#4
000036  6008              STR      r0,[r1,#0]
;;;276    	                                                            // HSE oscillator not bypassed  接入外部主时钟
;;;277    
;;;278                                                                    /* ----------- HSE OSCILLATOR CONFIGURATION ----------- */
;;;279                                                                    /* HSE = 8MHz Ext. crystal.                             */
;;;280        DEF_BIT_CLR(BSP_REG32_RCC_CR,BSP_MSK_HSECFG);               
000038  4608              MOV      r0,r1
00003a  6800              LDR      r0,[r0,#0]
00003c  f420007f          BIC      r0,r0,#0xff0000
000040  6008              STR      r0,[r1,#0]
;;;281    
;;;282        DEF_BIT_SET(BSP_REG32_RCC_CR,BSP_BIT_RCC_CR_HSEON);         // 启动 HSE
000042  4608              MOV      r0,r1
000044  6800              LDR      r0,[r0,#0]
000046  f4403080          ORR      r0,r0,#0x10000
00004a  6008              STR      r0,[r1,#0]
;;;283                                                                    /* Wait for HSE to Start Up                             */
;;;284        do {
00004c  bf00              NOP      
                  |L2.78|
;;;285            hse_rdyctr++;
00004e  1c6d              ADDS     r5,r5,#1
;;;286        } while ((hse_rdyctr < HSE_TIMEOUT_VAL)  &&
000050  f5b56fa0          CMP      r5,#0x500
000054  d20a              BCS      |L2.108|
;;;287                  DEF_BIT_IS_CLR(BSP_REG32_RCC_CR, BSP_BIT_RCC_CR_HSERDY));
000056  482c              LDR      r0,|L2.264|
000058  6800              LDR      r0,[r0,#0]
00005a  f4003000          AND      r0,r0,#0x20000
00005e  b910              CBNZ     r0,|L2.102|
000060  bf00              NOP      
000062  2001              MOVS     r0,#1
000064  e000              B        |L2.104|
                  |L2.102|
000066  2000              MOVS     r0,#0
                  |L2.104|
000068  2800              CMP      r0,#0
00006a  d1f0              BNE      |L2.78|
                  |L2.108|
;;;288    
;;;289    
;;;290        if (hse_rdyctr == HSE_TIMEOUT_VAL) {
00006c  f5b56fa0          CMP      r5,#0x500
000070  d100              BNE      |L2.116|
                  |L2.114|
;;;291            return;
;;;292        }
;;;293                                                                    /* --------------- SET UP THE AHB PRESCALER ----------- */
;;;294                                                                    /* HCLK = AHBCLK  = PLL / AHBPRES(1) = 168MHz.          */
;;;295        reg_val = (CPU_INT32U)0u;
;;;296        reg_val = BSP_REG32_RCC_CFGR;
;;;297    
;;;298        DEF_BIT_CLR(reg_val, BSP_MSK_RCC_CFGR_HPRE);                /* Clear HPRE[3:0] bits                                 */
;;;299    
;;;300        DEF_BIT_SET(reg_val, BSP_MSK_RCC_CFGR_SYSCLKDIV1);          /* Set HPRE[3:0] bits according to RCC_SYSCLK value     */
;;;301    	                                                            // AHB不分频
;;;302    
;;;303        BSP_REG32_RCC_CFGR = reg_val;                               /* Store the new value in RCC_CFGR register             */
;;;304    
;;;305                                                                    /* ---------------- CONFIGURE APB2 CLOCK -------------- */
;;;306                                                                    /*   APB2CLK = AHBCLK  / APB2DIV(2) = 84MHz.            */
;;;307        reg_val = BSP_REG32_RCC_CFGR;
;;;308    
;;;309        DEF_BIT_CLR(reg_val, BSP_MSK_RCC_CFGR_PPRE2);               /* Clear PPRE2[2:0] bits                                */
;;;310    
;;;311        DEF_BIT_SET(reg_val, BSP_MSK_RCC_CFGR_HCLK_DIV2 << 3u);     /* Set PPRE2[2:0] bits according to RCC_HCLK value      */
;;;312    	                                                            // 2分频
;;;313    
;;;314        BSP_REG32_RCC_CFGR = reg_val;                               /* Store the new value                                  */
;;;315    
;;;316                                                                    /* ---------------- CONFIGURE APB1 CLOCK -------------- */
;;;317                                                                    /* APB1CLK = AHBCLK  / APB1DIV(4) = 42MHz (max).        */
;;;318        reg_val = BSP_REG32_RCC_CFGR;
;;;319    
;;;320        DEF_BIT_CLR(reg_val,BSP_MSK_RCC_CFGR_PPRE1);                /* Clear PPRE1[2:0] bits                                */
;;;321    
;;;322        DEF_BIT_SET(reg_val, BSP_MSK_RCC_CFGR_HCLK_DIV4);           /* Set PPRE1[2:0] bits according to RCC_HCLK value      */
;;;323    	                                                            // 4分频
;;;324    
;;;325                                                                    /* Store the new value in RCC_CFGR register             */
;;;326        BSP_REG32_RCC_CFGR    =     reg_val;
;;;327                                                                    /* ------------- CONFIGURE AND ENABLE PLL ------------- */
;;;328                                                                    /* PLL_M = 8, PLL_N = 336, PLL_P = 2, PLL_Q = 7         */
;;;329                                                                    /* PLLCLK    = HSE * (PLLN / PLLM)      = 336MHz.       */
;;;330                                                                    /* SYSCLK    = PLLCLK / PLLP            = 168MHz.       */
;;;331                                                                    /* OTG_FSCLK = PLLCLK / PLLQ            =  48MHz.       */
;;;332    
;;;333        BSP_REG32_RCC_PLLCFGR = ( BSP_BIT_RCC_PLLCFGR_PLLM       )               |   
;;;334                                ( BSP_BIT_RCC_PLLCFGR_PLLN << 6u )               |   
;;;335                                ( BSP_MSK_PLLCFGR_PLLSRC_HSE     )               |  // 选择外部时钟源HSE作为PLL时钟输入
;;;336                                ((BSP_BIT_RCC_PLLCFGR_PLLP >> 1u ) -1u ) << 16u  |   
;;;337                                ( BSP_BIT_RCC_PLLCFGR_PLLQ << 24u);                 
;;;338    
;;;339        DEF_BIT_SET( BSP_REG32_RCC_CR, BSP_BIT_RCC_CR_PLLON);       // 启动 Main PLL  ，并等待锁相环稳定输出
;;;340                                                                    /* Wait for PLL to lock.                                */
;;;341        while ( DEF_BIT_IS_CLR( BSP_REG32_RCC_CR,
;;;342                                BSP_BIT_RCC_CR_PLLRDY)) {
;;;343            ;
;;;344        }
;;;345                                                                    /* ------------- CONFIGURE FLASH MEMORY --------------- */
;;;346    
;;;347        DEF_BIT_SET(BSP_REG32_FLASH_ACR, BSP_MSK_FLASHLATENCY_5WS); /* Allow 5 Flash Wait States when HCLK > 120MHz.        */
;;;348    
;;;349                                                                    /* Enable Prefetch, Instruction Cache, and Data Cache.  */
;;;350        DEF_BIT_SET(BSP_REG32_FLASH_ACR, (BSP_BIT_FLASH_ACR_PRFTEN  |
;;;351                                          BSP_BIT_FLASH_ACR_ICEN    |
;;;352                                          BSP_BIT_FLASH_ACR_DCEN));
;;;353                                                                    /* -------- SELECT PLL OUTPUT AS SYSTEM CLOCK --------- */
;;;354                                                                    /* HCLK = SYSCLK = PLL = 168MHz.                        */
;;;355        
;;;356    	DEF_BIT_SET(BSP_REG32_RCC_CFGR, BSP_MSK_SYSCLK_SRC_PLLCLK); // 将Main PLL 设置为SYSCLK
;;;357    
;;;358                        
;;;359        while((BSP_REG32_RCC_CFGR & BSP_MSK_RCC_CFGR_SWS)             /* Wait until PLL is selected as system clock source    */
;;;360                                  != BSP_MSK_RCC_CFGR_SWS_PLL){
;;;361            ;
;;;362        }
;;;363    
;;;364    	
;;;365    	// 将所有TIM的内部时钟CK_IN频率都设置为HCLK=168M
;;;366    	RCC_TIMCLKPresConfig(RCC_TIMPrescActivated); // 使能TIMPRE，因为APBx的预分频值为APB2-2和APB1-4，所以TIMxCLK=HCLK=168M
;;;367    
;;;368    
;;;369    #ifdef TRACE_EN                                                 /* See project / compiler preprocessor options.         */
;;;370        BSP_CPU_REG_DBGMCU_CR |=  BSP_DBGMCU_CR_TRACE_IOEN_MASK;    /* Enable tracing (see Note #2).                        */
;;;371        BSP_CPU_REG_DBGMCU_CR &= ~BSP_DBGMCU_CR_TRACE_MODE_MASK;    /* Clr trace mode sel bits.                             */
;;;372        BSP_CPU_REG_DBGMCU_CR |=  BSP_DBGMCU_CR_TRACE_MODE_SYNC_04; /* Cfg trace mode to synch 4-bit.                       */
;;;373    #endif
;;;374    }
000072  bd70              POP      {r4-r6,pc}
                  |L2.116|
000074  2400              MOVS     r4,#0                 ;295
000076  4824              LDR      r0,|L2.264|
000078  3008              ADDS     r0,r0,#8              ;296
00007a  6804              LDR      r4,[r0,#0]            ;296
00007c  f02404f0          BIC      r4,r4,#0xf0           ;298
000080  bf00              NOP                            ;300
000082  6004              STR      r4,[r0,#0]            ;303
000084  6804              LDR      r4,[r0,#0]            ;307
000086  f4244460          BIC      r4,r4,#0xe000         ;309
00008a  f4444400          ORR      r4,r4,#0x8000         ;311
00008e  6004              STR      r4,[r0,#0]            ;314
000090  6804              LDR      r4,[r0,#0]            ;318
000092  f42454e0          BIC      r4,r4,#0x1c00         ;320
000096  f44454a0          ORR      r4,r4,#0x1400         ;322
00009a  6004              STR      r4,[r0,#0]            ;326
00009c  481d              LDR      r0,|L2.276|
00009e  491a              LDR      r1,|L2.264|
0000a0  1d09              ADDS     r1,r1,#4              ;333
0000a2  6008              STR      r0,[r1,#0]            ;333
0000a4  1f08              SUBS     r0,r1,#4              ;339
0000a6  6800              LDR      r0,[r0,#0]            ;339
0000a8  f0407080          ORR      r0,r0,#0x1000000      ;339
0000ac  1f09              SUBS     r1,r1,#4              ;339
0000ae  6008              STR      r0,[r1,#0]            ;339
0000b0  bf00              NOP                            ;341
                  |L2.178|
0000b2  4815              LDR      r0,|L2.264|
0000b4  6800              LDR      r0,[r0,#0]            ;341
0000b6  f0007000          AND      r0,r0,#0x2000000      ;341
0000ba  b910              CBNZ     r0,|L2.194|
0000bc  bf00              NOP                            ;341
0000be  2001              MOVS     r0,#1                 ;341
0000c0  e000              B        |L2.196|
                  |L2.194|
0000c2  2000              MOVS     r0,#0                 ;341
                  |L2.196|
0000c4  2800              CMP      r0,#0                 ;341
0000c6  d1f4              BNE      |L2.178|
0000c8  4813              LDR      r0,|L2.280|
0000ca  6800              LDR      r0,[r0,#0]            ;347
0000cc  f0400005          ORR      r0,r0,#5              ;347
0000d0  4911              LDR      r1,|L2.280|
0000d2  6008              STR      r0,[r1,#0]            ;347
0000d4  4608              MOV      r0,r1                 ;350
0000d6  6800              LDR      r0,[r0,#0]            ;350
0000d8  f44060e0          ORR      r0,r0,#0x700          ;350
0000dc  6008              STR      r0,[r1,#0]            ;350
0000de  480a              LDR      r0,|L2.264|
0000e0  3008              ADDS     r0,r0,#8              ;356
0000e2  6800              LDR      r0,[r0,#0]            ;356
0000e4  f0400002          ORR      r0,r0,#2              ;356
0000e8  4907              LDR      r1,|L2.264|
0000ea  3108              ADDS     r1,r1,#8              ;356
0000ec  6008              STR      r0,[r1,#0]            ;356
0000ee  bf00              NOP                            ;359
                  |L2.240|
0000f0  4805              LDR      r0,|L2.264|
0000f2  3008              ADDS     r0,r0,#8              ;359
0000f4  6800              LDR      r0,[r0,#0]            ;359
0000f6  f000000c          AND      r0,r0,#0xc            ;359
0000fa  2808              CMP      r0,#8                 ;359
0000fc  d1f8              BNE      |L2.240|
0000fe  2001              MOVS     r0,#1                 ;366
000100  f7fffffe          BL       RCC_TIMCLKPresConfig
000104  bf00              NOP      
000106  e7b4              B        |L2.114|
;;;375    
                          ENDP

                  |L2.264|
                          DCD      0x40023800
                  |L2.268|
                          DCD      0xfef6ffff
                  |L2.272|
                          DCD      0x24003010
                  |L2.276|
                          DCD      0x07405408
                  |L2.280|
                          DCD      0x40023c00

                          AREA ||i.BSP_LED_Toggle||, CODE, READONLY, ALIGN=2

                  BSP_LED_Toggle PROC
;;;785    
;;;786    void  BSP_LED_Toggle (CPU_INT08U  led)
000000  4601              MOV      r1,r0
;;;787    {
;;;788        CPU_INT32U  pins;
;;;789    
;;;790        switch (led) {
000002  b111              CBZ      r1,|L3.10|
000004  2901              CMP      r1,#1
000006  d11c              BNE      |L3.66|
000008  e00d              B        |L3.38|
                  |L3.10|
;;;791            case 0u:
;;;792                 pins  =  GPIOD->ODR;             
00000a  4a0f              LDR      r2,|L3.72|
00000c  6810              LDR      r0,[r2,#0]
;;;793                 pins ^=  BSP_GPIOD_LEDBlue_OUT;                           
00000e  f0800008          EOR      r0,r0,#8
;;;794    			 GPIOD->BSRRL =    pins   &  BSP_GPIOD_LEDBlue_OUT; //1
000012  f0000208          AND      r2,r0,#8
000016  4b0c              LDR      r3,|L3.72|
000018  1d1b              ADDS     r3,r3,#4
00001a  801a              STRH     r2,[r3,#0]
;;;795    		     GPIOD->BSRRH =  (~pins)  &  BSP_GPIOD_LEDBlue_OUT; //0
00001c  2208              MOVS     r2,#8
00001e  4382              BICS     r2,r2,r0
000020  1c9b              ADDS     r3,r3,#2
000022  801a              STRH     r2,[r3,#0]
;;;796                 break;
000024  e00e              B        |L3.68|
                  |L3.38|
;;;797    
;;;798            case 1u:
;;;799                 pins  =  GPIOD->ODR;             
000026  4a08              LDR      r2,|L3.72|
000028  6810              LDR      r0,[r2,#0]
;;;800                 pins ^=  BSP_GPIOD_LEDRed_OUT; 
00002a  f0800010          EOR      r0,r0,#0x10
;;;801    		     GPIOD->BSRRL =    pins   &  BSP_GPIOD_LEDRed_OUT; //1
00002e  f0000210          AND      r2,r0,#0x10
000032  4b05              LDR      r3,|L3.72|
000034  1d1b              ADDS     r3,r3,#4
000036  801a              STRH     r2,[r3,#0]
;;;802    		     GPIOD->BSRRH =  (~pins)  &  BSP_GPIOD_LEDRed_OUT; //0
000038  2210              MOVS     r2,#0x10
00003a  4382              BICS     r2,r2,r0
00003c  1c9b              ADDS     r3,r3,#2
00003e  801a              STRH     r2,[r3,#0]
;;;803                 break;
000040  e000              B        |L3.68|
                  |L3.66|
;;;804    
;;;805            default:
;;;806                 break;
000042  bf00              NOP      
                  |L3.68|
000044  bf00              NOP                            ;796
;;;807        }
;;;808    }
000046  4770              BX       lr
;;;809    
                          ENDP

                  |L3.72|
                          DCD      0x40020c14

                          AREA ||i.BSP_Tick_Init||, CODE, READONLY, ALIGN=2

                  BSP_Tick_Init PROC
;;;419    
;;;420    void  BSP_Tick_Init (void)
000000  b570              PUSH     {r4-r6,lr}
;;;421    {
;;;422        CPU_INT32U  cpu_clk_freq;
;;;423        CPU_INT32U  cnts;
;;;424        
;;;425        
;;;426        cpu_clk_freq = BSP_CPU_ClkFreq();                           /* Determine SysTick reference freq.                    */
000002  f7fffffe          BL       BSP_CPU_ClkFreq
000006  4604              MOV      r4,r0
;;;427        
;;;428    #if (OS_VERSION >= 30000u)
;;;429        cnts = (cpu_clk_freq / (CPU_INT32U)OSCfg_TickRate_Hz);      /* Determine nbr SysTick increments                     */
000008  4803              LDR      r0,|L4.24|
00000a  6800              LDR      r0,[r0,#0]  ; OSCfg_TickRate_Hz
00000c  fbb4f5f0          UDIV     r5,r4,r0
;;;430    #else
;;;431        cnts = (cpu_clk_freq / (CPU_INT32U)OS_TICKS_PER_SEC);       /* Determine nbr SysTick increments.                    */
;;;432    #endif
;;;433        
;;;434        OS_CPU_SysTickInit(cnts);                                   /* Init uC/OS periodic time src (SysTick).              */
000010  4628              MOV      r0,r5
000012  f7fffffe          BL       OS_CPU_SysTickInit
;;;435    }
000016  bd70              POP      {r4-r6,pc}
;;;436    
                          ENDP

                  |L4.24|
                          DCD      OSCfg_TickRate_Hz

                          AREA ||i.BSP_XLong_IOAllocate||, CODE, READONLY, ALIGN=2

                  BSP_XLong_IOAllocate PROC
;;;527    
;;;528    void   BSP_XLong_IOAllocate(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;529    {
;;;530        GPIO_InitTypeDef  gpio_init;
;;;531    
;;;532    	
;;;533        /* Configure GPIOA */
;;;534    	BSP_PeriphEn(BSP_PERIPH_ID_GPIOA);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       BSP_PeriphEn
;;;535    	
;;;536        gpio_init.GPIO_Pin   = BSP_GPIOA_Button_IN;
000008  2020              MOVS     r0,#0x20
00000a  9000              STR      r0,[sp,#0]
;;;537        gpio_init.GPIO_Mode  = GPIO_Mode_IN;
00000c  2000              MOVS     r0,#0
00000e  f88d0004          STRB     r0,[sp,#4]
;;;538        gpio_init.GPIO_OType = GPIO_OType_OD;
000012  2001              MOVS     r0,#1
000014  f88d0006          STRB     r0,[sp,#6]
;;;539        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
000018  2000              MOVS     r0,#0
00001a  f88d0007          STRB     r0,[sp,#7]
;;;540        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
00001e  2002              MOVS     r0,#2
000020  f88d0005          STRB     r0,[sp,#5]
;;;541        GPIO_Init(GPIOA, &gpio_init);
000024  4669              MOV      r1,sp
000026  48fe              LDR      r0,|L5.1056|
000028  f7fffffe          BL       GPIO_Init
;;;542    	
;;;543    	gpio_init.GPIO_Pin   = BSP_GPIOA_FS_VBUS_IN;
00002c  f44f7000          MOV      r0,#0x200
000030  9000              STR      r0,[sp,#0]
;;;544        gpio_init.GPIO_Mode  = GPIO_Mode_IN;
000032  2000              MOVS     r0,#0
000034  f88d0004          STRB     r0,[sp,#4]
;;;545        gpio_init.GPIO_OType = GPIO_OType_OD;
000038  2001              MOVS     r0,#1
00003a  f88d0006          STRB     r0,[sp,#6]
;;;546        gpio_init.GPIO_PuPd  = GPIO_PuPd_DOWN;
00003e  2002              MOVS     r0,#2
000040  f88d0007          STRB     r0,[sp,#7]
;;;547        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
000044  f88d0005          STRB     r0,[sp,#5]
;;;548        GPIO_Init(GPIOA, &gpio_init);
000048  4669              MOV      r1,sp
00004a  48f5              LDR      r0,|L5.1056|
00004c  f7fffffe          BL       GPIO_Init
;;;549    	
;;;550    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource0,GPIO_AF_UART4);
000050  2208              MOVS     r2,#8
000052  2100              MOVS     r1,#0
000054  48f2              LDR      r0,|L5.1056|
000056  f7fffffe          BL       GPIO_PinAFConfig
;;;551    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource1,GPIO_AF_UART4); 
00005a  2208              MOVS     r2,#8
00005c  2101              MOVS     r1,#1
00005e  48f0              LDR      r0,|L5.1056|
000060  f7fffffe          BL       GPIO_PinAFConfig
;;;552    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource2,GPIO_AF_TIM9);
000064  2203              MOVS     r2,#3
000066  2102              MOVS     r1,#2
000068  48ed              LDR      r0,|L5.1056|
00006a  f7fffffe          BL       GPIO_PinAFConfig
;;;553    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource3,GPIO_AF_TIM9);	
00006e  2203              MOVS     r2,#3
000070  4611              MOV      r1,r2
000072  48eb              LDR      r0,|L5.1056|
000074  f7fffffe          BL       GPIO_PinAFConfig
;;;554    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource6,GPIO_AF_TIM13);	
000078  2209              MOVS     r2,#9
00007a  2106              MOVS     r1,#6
00007c  48e8              LDR      r0,|L5.1056|
00007e  f7fffffe          BL       GPIO_PinAFConfig
;;;555    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource7,GPIO_AF_TIM14);	
000082  2209              MOVS     r2,#9
000084  2107              MOVS     r1,#7
000086  48e6              LDR      r0,|L5.1056|
000088  f7fffffe          BL       GPIO_PinAFConfig
;;;556    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource10,GPIO_AF_USART1);	
00008c  2207              MOVS     r2,#7
00008e  210a              MOVS     r1,#0xa
000090  48e3              LDR      r0,|L5.1056|
000092  f7fffffe          BL       GPIO_PinAFConfig
;;;557    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource11,GPIO_AF_OTG_FS);	
000096  220a              MOVS     r2,#0xa
000098  210b              MOVS     r1,#0xb
00009a  48e1              LDR      r0,|L5.1056|
00009c  f7fffffe          BL       GPIO_PinAFConfig
;;;558    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource12,GPIO_AF_OTG_FS);	
0000a0  220a              MOVS     r2,#0xa
0000a2  210c              MOVS     r1,#0xc
0000a4  48de              LDR      r0,|L5.1056|
0000a6  f7fffffe          BL       GPIO_PinAFConfig
;;;559    	GPIO_PinAFConfig(GPIOA,GPIO_PinSource15,GPIO_AF_TIM2);
0000aa  2201              MOVS     r2,#1
0000ac  210f              MOVS     r1,#0xf
0000ae  48dc              LDR      r0,|L5.1056|
0000b0  f7fffffe          BL       GPIO_PinAFConfig
;;;560    	
;;;561    	gpio_init.GPIO_Pin   = BSP_GPIOA_UART4_TX|BSP_GPIOA_UART4_TX|BSP_GPIOA_TIM9_CH1|BSP_GPIOA_TIM9_CH2|
0000b4  f64940cd          MOV      r0,#0x9ccd
0000b8  9000              STR      r0,[sp,#0]
;;;562    	                       BSP_GPIOA_LED_TIM13_CH1|BSP_GPIOA_Buzzer_TIM14_CH1|BSP_GPIOA_USART1_RX|
;;;563    						   BSP_GPIOA_FS_DM|BSP_GPIOA_FS_DP|BSP_GPIOA_TIM2_ETR;
;;;564        gpio_init.GPIO_Mode  = GPIO_Mode_AF;
0000ba  2002              MOVS     r0,#2
0000bc  f88d0004          STRB     r0,[sp,#4]
;;;565        gpio_init.GPIO_OType = GPIO_OType_PP;
0000c0  2000              MOVS     r0,#0
0000c2  f88d0006          STRB     r0,[sp,#6]
;;;566    	gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
0000c6  f88d0007          STRB     r0,[sp,#7]
;;;567        gpio_init.GPIO_Speed = GPIO_Speed_100MHz;
0000ca  2003              MOVS     r0,#3
0000cc  f88d0005          STRB     r0,[sp,#5]
;;;568        GPIO_Init(GPIOA, &gpio_init);
0000d0  4669              MOV      r1,sp
0000d2  48d3              LDR      r0,|L5.1056|
0000d4  f7fffffe          BL       GPIO_Init
;;;569    	
;;;570    
;;;571    	/* Configure GPIOB */
;;;572        BSP_PeriphEn(BSP_PERIPH_ID_GPIOB);
0000d8  2001              MOVS     r0,#1
0000da  f7fffffe          BL       BSP_PeriphEn
;;;573    	
;;;574    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource0,GPIO_AF_TIM3);	
0000de  2202              MOVS     r2,#2
0000e0  2100              MOVS     r1,#0
0000e2  48d0              LDR      r0,|L5.1060|
0000e4  f7fffffe          BL       GPIO_PinAFConfig
;;;575    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource1,GPIO_AF_TIM3);	
0000e8  2202              MOVS     r2,#2
0000ea  2101              MOVS     r1,#1
0000ec  48cd              LDR      r0,|L5.1060|
0000ee  f7fffffe          BL       GPIO_PinAFConfig
;;;576    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource3,GPIO_AF_SPI1);	
0000f2  2205              MOVS     r2,#5
0000f4  2103              MOVS     r1,#3
0000f6  48cb              LDR      r0,|L5.1060|
0000f8  f7fffffe          BL       GPIO_PinAFConfig
;;;577    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource4,GPIO_AF_SPI1);	
0000fc  2205              MOVS     r2,#5
0000fe  2104              MOVS     r1,#4
000100  48c8              LDR      r0,|L5.1060|
000102  f7fffffe          BL       GPIO_PinAFConfig
;;;578    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource5,GPIO_AF_SPI1);
000106  2205              MOVS     r2,#5
000108  4611              MOV      r1,r2
00010a  48c6              LDR      r0,|L5.1060|
00010c  f7fffffe          BL       GPIO_PinAFConfig
;;;579    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource6,GPIO_AF_I2C1);	
000110  2204              MOVS     r2,#4
000112  2106              MOVS     r1,#6
000114  48c3              LDR      r0,|L5.1060|
000116  f7fffffe          BL       GPIO_PinAFConfig
;;;580    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource7,GPIO_AF_I2C1);	
00011a  2204              MOVS     r2,#4
00011c  2107              MOVS     r1,#7
00011e  48c1              LDR      r0,|L5.1060|
000120  f7fffffe          BL       GPIO_PinAFConfig
;;;581    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource8,GPIO_AF_TIM10);	
000124  2203              MOVS     r2,#3
000126  2108              MOVS     r1,#8
000128  48be              LDR      r0,|L5.1060|
00012a  f7fffffe          BL       GPIO_PinAFConfig
;;;582    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource9,GPIO_AF_TIM11);	
00012e  2203              MOVS     r2,#3
000130  2109              MOVS     r1,#9
000132  48bc              LDR      r0,|L5.1060|
000134  f7fffffe          BL       GPIO_PinAFConfig
;;;583    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource10,GPIO_AF_I2C2);	
000138  2204              MOVS     r2,#4
00013a  210a              MOVS     r1,#0xa
00013c  48b9              LDR      r0,|L5.1060|
00013e  f7fffffe          BL       GPIO_PinAFConfig
;;;584    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource11,GPIO_AF_I2C2);	
000142  2204              MOVS     r2,#4
000144  210b              MOVS     r1,#0xb
000146  48b7              LDR      r0,|L5.1060|
000148  f7fffffe          BL       GPIO_PinAFConfig
;;;585    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource12,GPIO_AF_CAN2);	
00014c  2209              MOVS     r2,#9
00014e  210c              MOVS     r1,#0xc
000150  48b4              LDR      r0,|L5.1060|
000152  f7fffffe          BL       GPIO_PinAFConfig
;;;586    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource13,GPIO_AF_CAN2);	
000156  2209              MOVS     r2,#9
000158  210d              MOVS     r1,#0xd
00015a  48b2              LDR      r0,|L5.1060|
00015c  f7fffffe          BL       GPIO_PinAFConfig
;;;587    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource14,GPIO_AF_TIM12);	
000160  2209              MOVS     r2,#9
000162  210e              MOVS     r1,#0xe
000164  48af              LDR      r0,|L5.1060|
000166  f7fffffe          BL       GPIO_PinAFConfig
;;;588    	GPIO_PinAFConfig(GPIOB,GPIO_PinSource15,GPIO_AF_TIM12);	
00016a  2209              MOVS     r2,#9
00016c  210f              MOVS     r1,#0xf
00016e  48ad              LDR      r0,|L5.1060|
000170  f7fffffe          BL       GPIO_PinAFConfig
;;;589    	
;;;590        gpio_init.GPIO_Pin   = BSP_GPIOB_TIM3_CH3|BSP_GPIOB_TIM3_CH4|BSP_GPIOB_SPI1_SCK|BSP_GPIOB_SPI1_MISO|BSP_GPIOB_SPI1_MOSI|
000174  f64f70fb          MOV      r0,#0xfffb
000178  9000              STR      r0,[sp,#0]
;;;591    	                       BSP_GPIOB_I2C1_SCL|BSP_GPIOB_I2C1_SDA|BSP_GPIOB_FET_1A_TIM10_CH1|BSP_GPIOB_FET_2A_TIM11_CH1|
;;;592    						   BSP_GPIOB_I2C2_SCL|BSP_GPIOB_I2C2_SDA|BSP_GPIOB_CAN2_RX|BSP_GPIOB_CAN2_TX|
;;;593    						   BSP_GPIOB_TIM12_CH1|BSP_GPIOB_TIM12_CH2;
;;;594    						   
;;;595        gpio_init.GPIO_Mode  = GPIO_Mode_AF;
00017a  2002              MOVS     r0,#2
00017c  f88d0004          STRB     r0,[sp,#4]
;;;596        gpio_init.GPIO_OType = GPIO_OType_PP;
000180  2000              MOVS     r0,#0
000182  f88d0006          STRB     r0,[sp,#6]
;;;597        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
000186  f88d0007          STRB     r0,[sp,#7]
;;;598        gpio_init.GPIO_Speed = GPIO_Speed_100MHz;
00018a  2003              MOVS     r0,#3
00018c  f88d0005          STRB     r0,[sp,#5]
;;;599        GPIO_Init(GPIOB, &gpio_init);	
000190  4669              MOV      r1,sp
000192  48a4              LDR      r0,|L5.1060|
000194  f7fffffe          BL       GPIO_Init
;;;600    	
;;;601    
;;;602    	/* Configure GPIOC */	
;;;603        BSP_PeriphEn(BSP_PERIPH_ID_GPIOC);	
000198  2002              MOVS     r0,#2
00019a  f7fffffe          BL       BSP_PeriphEn
;;;604    
;;;605        gpio_init.GPIO_Pin   = BSP_GPIOC_SPI4_CS2_OUT;
00019e  f44f5000          MOV      r0,#0x2000
0001a2  9000              STR      r0,[sp,#0]
;;;606        gpio_init.GPIO_Mode  = GPIO_Mode_OUT;
0001a4  2001              MOVS     r0,#1
0001a6  f88d0004          STRB     r0,[sp,#4]
;;;607        gpio_init.GPIO_OType = GPIO_OType_PP;
0001aa  2000              MOVS     r0,#0
0001ac  f88d0006          STRB     r0,[sp,#6]
;;;608        gpio_init.GPIO_PuPd  = GPIO_PuPd_UP;
0001b0  2001              MOVS     r0,#1
0001b2  f88d0007          STRB     r0,[sp,#7]
;;;609        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
0001b6  2002              MOVS     r0,#2
0001b8  f88d0005          STRB     r0,[sp,#5]
;;;610        GPIO_Init(GPIOC, &gpio_init);	
0001bc  4669              MOV      r1,sp
0001be  489a              LDR      r0,|L5.1064|
0001c0  f7fffffe          BL       GPIO_Init
;;;611    	
;;;612    	GPIO_SetBits(GPIOC, BSP_GPIOC_SPI4_CS2_OUT);
0001c4  f44f5100          MOV      r1,#0x2000
0001c8  4897              LDR      r0,|L5.1064|
0001ca  f7fffffe          BL       GPIO_SetBits
;;;613    	
;;;614        gpio_init.GPIO_Pin   = BSP_GPIOC_SBUS_OUT;
0001ce  f44f4080          MOV      r0,#0x4000
0001d2  9000              STR      r0,[sp,#0]
;;;615        gpio_init.GPIO_Mode  = GPIO_Mode_OUT;
0001d4  2001              MOVS     r0,#1
0001d6  f88d0004          STRB     r0,[sp,#4]
;;;616        gpio_init.GPIO_OType = GPIO_OType_PP;
0001da  2000              MOVS     r0,#0
0001dc  f88d0006          STRB     r0,[sp,#6]
;;;617        gpio_init.GPIO_PuPd  = GPIO_PuPd_DOWN;
0001e0  2002              MOVS     r0,#2
0001e2  f88d0007          STRB     r0,[sp,#7]
;;;618        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
0001e6  f88d0005          STRB     r0,[sp,#5]
;;;619        GPIO_Init(GPIOC, &gpio_init);	
0001ea  4669              MOV      r1,sp
0001ec  488e              LDR      r0,|L5.1064|
0001ee  f7fffffe          BL       GPIO_Init
;;;620    	
;;;621    	GPIO_ResetBits(GPIOC, BSP_GPIOC_SBUS_OUT);	
0001f2  f44f4180          MOV      r1,#0x4000
0001f6  488c              LDR      r0,|L5.1064|
0001f8  f7fffffe          BL       GPIO_ResetBits
;;;622    	
;;;623        gpio_init.GPIO_Pin   = BSP_GPIOC_ADC1_IN10|BSP_GPIOC_ADC1_IN11|BSP_GPIOC_ADC1_IN12|BSP_GPIOC_ADC1_IN13;
0001fc  200f              MOVS     r0,#0xf
0001fe  9000              STR      r0,[sp,#0]
;;;624        gpio_init.GPIO_Mode  = GPIO_Mode_AN;
000200  2003              MOVS     r0,#3
000202  f88d0004          STRB     r0,[sp,#4]
;;;625        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
000206  2000              MOVS     r0,#0
000208  f88d0007          STRB     r0,[sp,#7]
;;;626        GPIO_Init(GPIOC, &gpio_init);
00020c  4669              MOV      r1,sp
00020e  4886              LDR      r0,|L5.1064|
000210  f7fffffe          BL       GPIO_Init
;;;627    
;;;628    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource6,GPIO_AF_TIM3);	
000214  2202              MOVS     r2,#2
000216  2106              MOVS     r1,#6
000218  4883              LDR      r0,|L5.1064|
00021a  f7fffffe          BL       GPIO_PinAFConfig
;;;629    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource7,GPIO_AF_TIM3);	
00021e  2202              MOVS     r2,#2
000220  2107              MOVS     r1,#7
000222  4881              LDR      r0,|L5.1064|
000224  f7fffffe          BL       GPIO_PinAFConfig
;;;630    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource8,GPIO_AF_SDIO);	
000228  220c              MOVS     r2,#0xc
00022a  2108              MOVS     r1,#8
00022c  487e              LDR      r0,|L5.1064|
00022e  f7fffffe          BL       GPIO_PinAFConfig
;;;631    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource9,GPIO_AF_SDIO);	
000232  220c              MOVS     r2,#0xc
000234  2109              MOVS     r1,#9
000236  487c              LDR      r0,|L5.1064|
000238  f7fffffe          BL       GPIO_PinAFConfig
;;;632    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource10,GPIO_AF_SDIO);		
00023c  220c              MOVS     r2,#0xc
00023e  210a              MOVS     r1,#0xa
000240  4879              LDR      r0,|L5.1064|
000242  f7fffffe          BL       GPIO_PinAFConfig
;;;633    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource11,GPIO_AF_SDIO);	
000246  220c              MOVS     r2,#0xc
000248  210b              MOVS     r1,#0xb
00024a  4877              LDR      r0,|L5.1064|
00024c  f7fffffe          BL       GPIO_PinAFConfig
;;;634    	GPIO_PinAFConfig(GPIOC,GPIO_PinSource12,GPIO_AF_SDIO);
000250  220c              MOVS     r2,#0xc
000252  4611              MOV      r1,r2
000254  4874              LDR      r0,|L5.1064|
000256  f7fffffe          BL       GPIO_PinAFConfig
;;;635    	
;;;636        gpio_init.GPIO_Pin   = BSP_GPIOC_TIM3_CH1|BSP_GPIOC_TIM3_CH2|BSP_GPIOC_SDIO_D0|BSP_GPIOC_SDIO_D1|BSP_GPIOC_SDIO_D2|
00025a  f44f50fe          MOV      r0,#0x1fc0
00025e  9000              STR      r0,[sp,#0]
;;;637    	                       BSP_GPIOC_SDIO_D3|BSP_GPIOC_SDIO_CK;
;;;638        gpio_init.GPIO_Mode  = GPIO_Mode_AF;
000260  2002              MOVS     r0,#2
000262  f88d0004          STRB     r0,[sp,#4]
;;;639        gpio_init.GPIO_OType = GPIO_OType_PP;
000266  2000              MOVS     r0,#0
000268  f88d0006          STRB     r0,[sp,#6]
;;;640        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
00026c  f88d0007          STRB     r0,[sp,#7]
;;;641        gpio_init.GPIO_Speed = GPIO_Speed_100MHz;
000270  2003              MOVS     r0,#3
000272  f88d0005          STRB     r0,[sp,#5]
;;;642        GPIO_Init(GPIOC, &gpio_init);	
000276  4669              MOV      r1,sp
000278  486b              LDR      r0,|L5.1064|
00027a  f7fffffe          BL       GPIO_Init
;;;643    	
;;;644    	
;;;645    	/* Configure GPIOD */
;;;646        BSP_PeriphEn(BSP_PERIPH_ID_GPIOD);		
00027e  2003              MOVS     r0,#3
000280  f7fffffe          BL       BSP_PeriphEn
;;;647    	
;;;648        gpio_init.GPIO_Pin   = BSP_GPIOD_LEDBlue_OUT|BSP_GPIOD_LEDRed_OUT|BSP_GPIOD_SPI1_CS0_OUT;
000284  2098              MOVS     r0,#0x98
000286  9000              STR      r0,[sp,#0]
;;;649        gpio_init.GPIO_Mode  = GPIO_Mode_OUT;
000288  2001              MOVS     r0,#1
00028a  f88d0004          STRB     r0,[sp,#4]
;;;650        gpio_init.GPIO_OType = GPIO_OType_PP;
00028e  2000              MOVS     r0,#0
000290  f88d0006          STRB     r0,[sp,#6]
;;;651        gpio_init.GPIO_PuPd  = GPIO_PuPd_UP;
000294  2001              MOVS     r0,#1
000296  f88d0007          STRB     r0,[sp,#7]
;;;652        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
00029a  2002              MOVS     r0,#2
00029c  f88d0005          STRB     r0,[sp,#5]
;;;653        GPIO_Init(GPIOD, &gpio_init);	
0002a0  4669              MOV      r1,sp
0002a2  4862              LDR      r0,|L5.1068|
0002a4  f7fffffe          BL       GPIO_Init
;;;654    	
;;;655    	GPIO_SetBits(GPIOD,BSP_GPIOD_LEDBlue_OUT);
0002a8  2108              MOVS     r1,#8
0002aa  4860              LDR      r0,|L5.1068|
0002ac  f7fffffe          BL       GPIO_SetBits
;;;656    	GPIO_SetBits(GPIOD,BSP_GPIOD_LEDRed_OUT);
0002b0  2110              MOVS     r1,#0x10
0002b2  485e              LDR      r0,|L5.1068|
0002b4  f7fffffe          BL       GPIO_SetBits
;;;657    	GPIO_SetBits(GPIOD,BSP_GPIOD_SPI1_CS0_OUT);
0002b8  2180              MOVS     r1,#0x80
0002ba  485c              LDR      r0,|L5.1068|
0002bc  f7fffffe          BL       GPIO_SetBits
;;;658    		
;;;659    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource0,GPIO_AF_CAN1);
0002c0  2209              MOVS     r2,#9
0002c2  2100              MOVS     r1,#0
0002c4  4859              LDR      r0,|L5.1068|
0002c6  f7fffffe          BL       GPIO_PinAFConfig
;;;660    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource1,GPIO_AF_CAN1);
0002ca  2209              MOVS     r2,#9
0002cc  2101              MOVS     r1,#1
0002ce  4857              LDR      r0,|L5.1068|
0002d0  f7fffffe          BL       GPIO_PinAFConfig
;;;661    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource2,GPIO_AF_SDIO);
0002d4  220c              MOVS     r2,#0xc
0002d6  2102              MOVS     r1,#2
0002d8  4854              LDR      r0,|L5.1068|
0002da  f7fffffe          BL       GPIO_PinAFConfig
;;;662    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource5,GPIO_AF_USART2);
0002de  2207              MOVS     r2,#7
0002e0  2105              MOVS     r1,#5
0002e2  4852              LDR      r0,|L5.1068|
0002e4  f7fffffe          BL       GPIO_PinAFConfig
;;;663    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource6,GPIO_AF_USART2);
0002e8  2207              MOVS     r2,#7
0002ea  2106              MOVS     r1,#6
0002ec  484f              LDR      r0,|L5.1068|
0002ee  f7fffffe          BL       GPIO_PinAFConfig
;;;664    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource8,GPIO_AF_USART3);
0002f2  2207              MOVS     r2,#7
0002f4  2108              MOVS     r1,#8
0002f6  484d              LDR      r0,|L5.1068|
0002f8  f7fffffe          BL       GPIO_PinAFConfig
;;;665    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource9,GPIO_AF_USART3);
0002fc  2207              MOVS     r2,#7
0002fe  2109              MOVS     r1,#9
000300  484a              LDR      r0,|L5.1068|
000302  f7fffffe          BL       GPIO_PinAFConfig
;;;666    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource12,GPIO_AF_TIM4);
000306  2202              MOVS     r2,#2
000308  210c              MOVS     r1,#0xc
00030a  4848              LDR      r0,|L5.1068|
00030c  f7fffffe          BL       GPIO_PinAFConfig
;;;667    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource13,GPIO_AF_TIM4);
000310  2202              MOVS     r2,#2
000312  210d              MOVS     r1,#0xd
000314  4845              LDR      r0,|L5.1068|
000316  f7fffffe          BL       GPIO_PinAFConfig
;;;668    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource14,GPIO_AF_TIM4);
00031a  2202              MOVS     r2,#2
00031c  210e              MOVS     r1,#0xe
00031e  4843              LDR      r0,|L5.1068|
000320  f7fffffe          BL       GPIO_PinAFConfig
;;;669    	GPIO_PinAFConfig(GPIOD,GPIO_PinSource15,GPIO_AF_TIM4);
000324  2202              MOVS     r2,#2
000326  210f              MOVS     r1,#0xf
000328  4840              LDR      r0,|L5.1068|
00032a  f7fffffe          BL       GPIO_PinAFConfig
;;;670    	
;;;671        gpio_init.GPIO_Pin   = BSP_GPIOD_CAN1_RX|BSP_GPIOD_CAN1_TX|BSP_GPIOD_SDIO_CMD| BSP_GPIOD_USART2_TX|BSP_GPIOD_USART2_RX|
00032e  f24f3067          MOV      r0,#0xf367
000332  9000              STR      r0,[sp,#0]
;;;672    	                       BSP_GPIOD_USART3_TX|BSP_GPIOD_USART3_RX|BSP_GPIOD_TIM4_CH1|BSP_GPIOD_TIM4_CH2|BSP_GPIOD_TIM4_CH3|
;;;673    						   BSP_GPIOD_TIM4_CH4;
;;;674        gpio_init.GPIO_Mode  = GPIO_Mode_AF;
000334  2002              MOVS     r0,#2
000336  f88d0004          STRB     r0,[sp,#4]
;;;675        gpio_init.GPIO_OType = GPIO_OType_PP;
00033a  2000              MOVS     r0,#0
00033c  f88d0006          STRB     r0,[sp,#6]
;;;676        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
000340  f88d0007          STRB     r0,[sp,#7]
;;;677        gpio_init.GPIO_Speed = GPIO_Speed_100MHz;
000344  2003              MOVS     r0,#3
000346  f88d0005          STRB     r0,[sp,#5]
;;;678        GPIO_Init(GPIOD, &gpio_init);	
00034a  4669              MOV      r1,sp
00034c  4837              LDR      r0,|L5.1068|
00034e  f7fffffe          BL       GPIO_Init
;;;679    
;;;680    
;;;681    	/* Configure GPIOE */
;;;682        BSP_PeriphEn(BSP_PERIPH_ID_GPIOE);
000352  2004              MOVS     r0,#4
000354  f7fffffe          BL       BSP_PeriphEn
;;;683    	
;;;684        gpio_init.GPIO_Pin   = BSP_GPIOE_SPI4_CS1_OUT|BSP_GPIOE_SPI4_CS0_OUT;
000358  2018              MOVS     r0,#0x18
00035a  9000              STR      r0,[sp,#0]
;;;685        gpio_init.GPIO_Mode  = GPIO_Mode_OUT;
00035c  2001              MOVS     r0,#1
00035e  f88d0004          STRB     r0,[sp,#4]
;;;686        gpio_init.GPIO_OType = GPIO_OType_PP;
000362  2000              MOVS     r0,#0
000364  f88d0006          STRB     r0,[sp,#6]
;;;687        gpio_init.GPIO_PuPd  = GPIO_PuPd_UP;
000368  2001              MOVS     r0,#1
00036a  f88d0007          STRB     r0,[sp,#7]
;;;688        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
00036e  2002              MOVS     r0,#2
000370  f88d0005          STRB     r0,[sp,#5]
;;;689        GPIO_Init(GPIOE, &gpio_init);	
000374  4669              MOV      r1,sp
000376  482e              LDR      r0,|L5.1072|
000378  f7fffffe          BL       GPIO_Init
;;;690    	
;;;691    	GPIO_SetBits(GPIOE, BSP_GPIOE_SPI4_CS0_OUT);    	
00037c  2110              MOVS     r1,#0x10
00037e  482c              LDR      r0,|L5.1072|
000380  f7fffffe          BL       GPIO_SetBits
;;;692    	GPIO_SetBits(GPIOE, BSP_GPIOE_SPI4_CS1_OUT);
000384  2108              MOVS     r1,#8
000386  482a              LDR      r0,|L5.1072|
000388  f7fffffe          BL       GPIO_SetBits
;;;693    	
;;;694        gpio_init.GPIO_Pin   = BSP_GPIOE_BAT_IN|BSP_GPIOE_SERVO_IN|BSP_GPIOE_VBUS_IN;
00038c  f44f4014          MOV      r0,#0x9400
000390  9000              STR      r0,[sp,#0]
;;;695        gpio_init.GPIO_Mode  = GPIO_Mode_IN;
000392  2000              MOVS     r0,#0
000394  f88d0004          STRB     r0,[sp,#4]
;;;696        gpio_init.GPIO_OType = GPIO_OType_OD;
000398  2001              MOVS     r0,#1
00039a  f88d0006          STRB     r0,[sp,#6]
;;;697        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
00039e  2000              MOVS     r0,#0
0003a0  f88d0007          STRB     r0,[sp,#7]
;;;698        gpio_init.GPIO_Speed = GPIO_Speed_50MHz;
0003a4  2002              MOVS     r0,#2
0003a6  f88d0005          STRB     r0,[sp,#5]
;;;699        GPIO_Init(GPIOE, &gpio_init);	
0003aa  4669              MOV      r1,sp
0003ac  4820              LDR      r0,|L5.1072|
0003ae  f7fffffe          BL       GPIO_Init
;;;700    	
;;;701    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource0,GPIO_AF_UART8);	
0003b2  2208              MOVS     r2,#8
0003b4  2100              MOVS     r1,#0
0003b6  481e              LDR      r0,|L5.1072|
0003b8  f7fffffe          BL       GPIO_PinAFConfig
;;;702    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource1,GPIO_AF_UART8);
0003bc  2208              MOVS     r2,#8
0003be  2101              MOVS     r1,#1
0003c0  481b              LDR      r0,|L5.1072|
0003c2  f7fffffe          BL       GPIO_PinAFConfig
;;;703    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource2,GPIO_AF_SPI4);	
0003c6  2205              MOVS     r2,#5
0003c8  2102              MOVS     r1,#2
0003ca  4819              LDR      r0,|L5.1072|
0003cc  f7fffffe          BL       GPIO_PinAFConfig
;;;704    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource5,GPIO_AF_SPI4);
0003d0  2205              MOVS     r2,#5
0003d2  4611              MOV      r1,r2
0003d4  4816              LDR      r0,|L5.1072|
0003d6  f7fffffe          BL       GPIO_PinAFConfig
;;;705    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource6,GPIO_AF_SPI4);
0003da  2205              MOVS     r2,#5
0003dc  2106              MOVS     r1,#6
0003de  4814              LDR      r0,|L5.1072|
0003e0  f7fffffe          BL       GPIO_PinAFConfig
;;;706    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource7,GPIO_AF_UART7);
0003e4  2208              MOVS     r2,#8
0003e6  2107              MOVS     r1,#7
0003e8  4811              LDR      r0,|L5.1072|
0003ea  f7fffffe          BL       GPIO_PinAFConfig
;;;707    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource8,GPIO_AF_UART7);
0003ee  2208              MOVS     r2,#8
0003f0  4611              MOV      r1,r2
0003f2  480f              LDR      r0,|L5.1072|
0003f4  f7fffffe          BL       GPIO_PinAFConfig
;;;708    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource9,GPIO_AF_TIM1);
0003f8  2201              MOVS     r2,#1
0003fa  2109              MOVS     r1,#9
0003fc  480c              LDR      r0,|L5.1072|
0003fe  f7fffffe          BL       GPIO_PinAFConfig
;;;709    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource11,GPIO_AF_TIM1);
000402  2201              MOVS     r2,#1
000404  210b              MOVS     r1,#0xb
000406  480a              LDR      r0,|L5.1072|
000408  f7fffffe          BL       GPIO_PinAFConfig
;;;710    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource13,GPIO_AF_TIM1);
00040c  2201              MOVS     r2,#1
00040e  210d              MOVS     r1,#0xd
000410  4807              LDR      r0,|L5.1072|
000412  f7fffffe          BL       GPIO_PinAFConfig
;;;711    	GPIO_PinAFConfig(GPIOE,GPIO_PinSource14,GPIO_AF_TIM1);
000416  2201              MOVS     r2,#1
000418  210e              MOVS     r1,#0xe
00041a  4805              LDR      r0,|L5.1072|
00041c  e00a              B        |L5.1076|
00041e  0000              DCW      0x0000
                  |L5.1056|
                          DCD      0x40020000
                  |L5.1060|
                          DCD      0x40020400
                  |L5.1064|
                          DCD      0x40020800
                  |L5.1068|
                          DCD      0x40020c00
                  |L5.1072|
                          DCD      0x40021000
                  |L5.1076|
000434  f7fffffe          BL       GPIO_PinAFConfig
;;;712    	
;;;713        gpio_init.GPIO_Pin   = BSP_GPIOE_UART8_RX|BSP_GPIOE_UART8_TX|BSP_GPIOE_SPI4_SCK|BSP_GPIOE_SPI4_MISO|
000438  f64630e7          MOV      r0,#0x6be7
00043c  9000              STR      r0,[sp,#0]
;;;714    	                       BSP_GPIOE_SPI4_MOSI|BSP_GPIOE_UART7_RX|BSP_GPIOE_UART7_TX|
;;;715    						   BSP_GPIOE_TIM1_CH1|BSP_GPIOE_TIM1_CH2|BSP_GPIOE_TIM1_CH3|BSP_GPIOE_TIM1_CH4;
;;;716        gpio_init.GPIO_Mode  = GPIO_Mode_AF;
00043e  2002              MOVS     r0,#2
000440  f88d0004          STRB     r0,[sp,#4]
;;;717        gpio_init.GPIO_OType = GPIO_OType_PP;
000444  2000              MOVS     r0,#0
000446  f88d0006          STRB     r0,[sp,#6]
;;;718        gpio_init.GPIO_PuPd  = GPIO_PuPd_NOPULL;
00044a  f88d0007          STRB     r0,[sp,#7]
;;;719        gpio_init.GPIO_Speed = GPIO_Speed_100MHz;
00044e  2003              MOVS     r0,#3
000450  f88d0005          STRB     r0,[sp,#5]
;;;720        GPIO_Init(GPIOE, &gpio_init);	
000454  4669              MOV      r1,sp
000456  4827              LDR      r0,|L5.1268|
000458  f7fffffe          BL       GPIO_Init
;;;721    
;;;722    
;;;723    	/* 使能外设时钟*/
;;;724        BSP_PeriphEn (BSP_PERIPH_ID_ADC1);      // BSP_GPIOC_ADC1_IN10/IN11/IN12/IN13
00045c  2088              MOVS     r0,#0x88
00045e  f7fffffe          BL       BSP_PeriphEn
;;;725    	
;;;726        BSP_PeriphEn (BSP_PERIPH_ID_TIM2);      // BSP_GPIOA_TIM2_ETR
000462  2060              MOVS     r0,#0x60
000464  f7fffffe          BL       BSP_PeriphEn
;;;727    	
;;;728        BSP_PeriphEn (BSP_PERIPH_ID_USART1);    // BSP_GPIOA_USART1_RX
000468  2084              MOVS     r0,#0x84
00046a  f7fffffe          BL       BSP_PeriphEn
;;;729        BSP_PeriphEn (BSP_PERIPH_ID_UART4);     // BSP_GPIOA_UART4_TX/RX
00046e  2073              MOVS     r0,#0x73
000470  f7fffffe          BL       BSP_PeriphEn
;;;730        BSP_PeriphEn (BSP_PERIPH_ID_UART7);     // BSP_GPIOA_UART7_TX/RX	
000474  207e              MOVS     r0,#0x7e
000476  f7fffffe          BL       BSP_PeriphEn
;;;731        BSP_PeriphEn (BSP_PERIPH_ID_UART8);     // BSP_GPIOA_UART8_TX/RX
00047a  207f              MOVS     r0,#0x7f
00047c  f7fffffe          BL       BSP_PeriphEn
;;;732    	BSP_PeriphEn (BSP_PERIPH_ID_USART3);    // BSP_GPIOA_USART3_TX/RX
000480  2072              MOVS     r0,#0x72
000482  f7fffffe          BL       BSP_PeriphEn
;;;733        BSP_PeriphEn (BSP_PERIPH_ID_USART2);    // BSP_GPIOA_USART2_TX/RX
000486  2071              MOVS     r0,#0x71
000488  f7fffffe          BL       BSP_PeriphEn
;;;734    	
;;;735        BSP_PeriphEn (BSP_PERIPH_ID_TIM10);     // BSP_GPIOB_FET_1A_TIM10_CH1
00048c  2091              MOVS     r0,#0x91
00048e  f7fffffe          BL       BSP_PeriphEn
;;;736        BSP_PeriphEn (BSP_PERIPH_ID_TIM11);     // BSP_GPIOB_FET_2A_TIM11_CH1
000492  2092              MOVS     r0,#0x92
000494  f7fffffe          BL       BSP_PeriphEn
;;;737    	
;;;738        BSP_PeriphEn (BSP_PERIPH_ID_TIM13);     // BSP_GPIOA_LED_TIM13_CH1
000498  2067              MOVS     r0,#0x67
00049a  f7fffffe          BL       BSP_PeriphEn
;;;739        BSP_PeriphEn (BSP_PERIPH_ID_TIM14);     // BSP_GPIOA_Buzzer_TIM14_CH1
00049e  2068              MOVS     r0,#0x68
0004a0  f7fffffe          BL       BSP_PeriphEn
;;;740    
;;;741        BSP_PeriphEn (BSP_PERIPH_ID_TIM12);     // BSP_GPIOB_TIM12_CH2/CH1
0004a4  2066              MOVS     r0,#0x66
0004a6  f7fffffe          BL       BSP_PeriphEn
;;;742        BSP_PeriphEn (BSP_PERIPH_ID_TIM9);      // BSP_GPIOA_TIM9_CH2/CH1
0004aa  2090              MOVS     r0,#0x90
0004ac  f7fffffe          BL       BSP_PeriphEn
;;;743        BSP_PeriphEn (BSP_PERIPH_ID_TIM3);      // BSP_GPIOC_TIM3_CH4/CH3/CH2/CH1
0004b0  2061              MOVS     r0,#0x61
0004b2  f7fffffe          BL       BSP_PeriphEn
;;;744        BSP_PeriphEn (BSP_PERIPH_ID_TIM4);      // BSP_GPIOD_TIM4_CH4/CH3/CH2/CH1
0004b6  2062              MOVS     r0,#0x62
0004b8  f7fffffe          BL       BSP_PeriphEn
;;;745        BSP_PeriphEn (BSP_PERIPH_ID_TIM1);	    // BSP_GPIOE_TIM1_CH4/CH3/CH2/CH1
0004bc  2080              MOVS     r0,#0x80
0004be  f7fffffe          BL       BSP_PeriphEn
;;;746    	
;;;747        BSP_PeriphEn (BSP_PERIPH_ID_I2C1);      // BSP_GPIOB_I2C1_SCL/SDA	
0004c2  2075              MOVS     r0,#0x75
0004c4  f7fffffe          BL       BSP_PeriphEn
;;;748        BSP_PeriphEn (BSP_PERIPH_ID_I2C2);      // BSP_GPIOB_I2C2_SCL/SDA	
0004c8  2076              MOVS     r0,#0x76
0004ca  f7fffffe          BL       BSP_PeriphEn
;;;749    
;;;750        BSP_PeriphEn (BSP_PERIPH_ID_SPI1);      // BSP_GPIOB_SPI1_SCK/MISO/MOSI
0004ce  208c              MOVS     r0,#0x8c
0004d0  f7fffffe          BL       BSP_PeriphEn
;;;751        BSP_PeriphEn (BSP_PERIPH_ID_SPI4);      // BSP_GPIOB_SPI4_SCK/MISO/MOSI	
0004d4  208d              MOVS     r0,#0x8d
0004d6  f7fffffe          BL       BSP_PeriphEn
;;;752    	
;;;753        BSP_PeriphEn (BSP_PERIPH_ID_SDIO);      // BSP_GPIOC_SDIO_D0/D1/D2/D3/CMD/CK
0004da  208b              MOVS     r0,#0x8b
0004dc  f7fffffe          BL       BSP_PeriphEn
;;;754    	
;;;755        BSP_PeriphEn (BSP_PERIPH_ID_CAN1);      // BSP_GPIOB_CAN1_TX/RX	
0004e0  2079              MOVS     r0,#0x79
0004e2  f7fffffe          BL       BSP_PeriphEn
;;;756        BSP_PeriphEn (BSP_PERIPH_ID_CAN2);      // BSP_GPIOB_CAN2_TX/RX	
0004e6  207a              MOVS     r0,#0x7a
0004e8  f7fffffe          BL       BSP_PeriphEn
;;;757    
;;;758        BSP_PeriphEn (BSP_PERIPH_ID_OTGFS);     // BSP_GPIOA_FS_DM/DP
0004ec  2027              MOVS     r0,#0x27
0004ee  f7fffffe          BL       BSP_PeriphEn
;;;759    
;;;760    
;;;761    }
0004f2  bd1c              POP      {r2-r4,pc}
;;;762    
                          ENDP

                  |L5.1268|
                          DCD      0x40021000

                          AREA ||i.CPU_TS32_to_uSec||, CODE, READONLY, ALIGN=2

                  CPU_TS32_to_uSec PROC
;;;1034   #if (CPU_CFG_TS_32_EN == DEF_ENABLED)
;;;1035   CPU_INT64U  CPU_TS32_to_uSec (CPU_TS32  ts_cnts)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;1036   {
000004  4682              MOV      r10,r0
;;;1037       CPU_INT64U  ts_us;
;;;1038       CPU_INT64U  fclk_freq;
;;;1039   
;;;1040   
;;;1041       fclk_freq = BSP_CPU_ClkFreq();
000006  f7fffffe          BL       BSP_CPU_ClkFreq
00000a  f04f0900          MOV      r9,#0
00000e  4680              MOV      r8,r0
;;;1042       ts_us     = ts_cnts / (fclk_freq / DEF_TIME_NBR_uS_PER_SEC);
000010  4a09              LDR      r2,|L6.56|
000012  2300              MOVS     r3,#0
000014  4640              MOV      r0,r8
000016  4649              MOV      r1,r9
000018  f7fffffe          BL       __aeabi_uldivmod
00001c  4606              MOV      r6,r0
00001e  4632              MOV      r2,r6
000020  460b              MOV      r3,r1
000022  4650              MOV      r0,r10
000024  2100              MOVS     r1,#0
000026  f7fffffe          BL       __aeabi_uldivmod
00002a  4604              MOV      r4,r0
00002c  460d              MOV      r5,r1
;;;1043   
;;;1044       return (ts_us);
00002e  4620              MOV      r0,r4
000030  4629              MOV      r1,r5
;;;1045   }
000032  e8bd87f0          POP      {r4-r10,pc}
;;;1046   #endif
                          ENDP

000036  0000              DCW      0x0000
                  |L6.56|
                          DCD      0x000f4240

                          AREA ||i.CPU_TS_TmrInit||, CODE, READONLY, ALIGN=2

                  CPU_TS_TmrInit PROC
;;;864    #if (CPU_CFG_TS_TMR_EN == DEF_ENABLED)
;;;865    void  CPU_TS_TmrInit (void)
000000  b510              PUSH     {r4,lr}
;;;866    {
;;;867        CPU_INT32U  fclk_freq;
;;;868    
;;;869    
;;;870        fclk_freq = BSP_CPU_ClkFreq();
000002  f7fffffe          BL       BSP_CPU_ClkFreq
000006  4604              MOV      r4,r0
;;;871    
;;;872        BSP_REG_DEM_CR     |= (CPU_INT32U)BSP_BIT_DEM_CR_TRCENA;    /* Enable Cortex-M4's DWT CYCCNT reg.                   */
000008  4808              LDR      r0,|L7.44|
00000a  6800              LDR      r0,[r0,#0]
00000c  f0407080          ORR      r0,r0,#0x1000000
000010  4906              LDR      r1,|L7.44|
000012  6008              STR      r0,[r1,#0]
;;;873        BSP_REG_DWT_CYCCNT  = (CPU_INT32U)0u;
000014  2000              MOVS     r0,#0
000016  4906              LDR      r1,|L7.48|
000018  6048              STR      r0,[r1,#4]
;;;874        BSP_REG_DWT_CR     |= (CPU_INT32U)BSP_BIT_DWT_CR_CYCCNTENA;
00001a  4608              MOV      r0,r1
00001c  6800              LDR      r0,[r0,#0]
00001e  f0400001          ORR      r0,r0,#1
000022  6008              STR      r0,[r1,#0]
;;;875    
;;;876        CPU_TS_TmrFreqSet((CPU_TS_TMR_FREQ)fclk_freq);
000024  4620              MOV      r0,r4
000026  f7fffffe          BL       CPU_TS_TmrFreqSet
;;;877    }
00002a  bd10              POP      {r4,pc}
;;;878    #endif
                          ENDP

                  |L7.44|
                          DCD      0xe000edfc
                  |L7.48|
                          DCD      0xe0001000

                          AREA ||i.CPU_TS_TmrRd||, CODE, READONLY, ALIGN=2

                  CPU_TS_TmrRd PROC
;;;964    #if (CPU_CFG_TS_TMR_EN == DEF_ENABLED)
;;;965    CPU_TS_TMR  CPU_TS_TmrRd (void)
000000  4901              LDR      r1,|L8.8|
;;;966    {
;;;967        CPU_TS_TMR  ts_tmr_cnts;
;;;968    
;;;969    
;;;970        ts_tmr_cnts = (CPU_TS_TMR)BSP_REG_DWT_CYCCNT;
000002  6848              LDR      r0,[r1,#4]
;;;971    
;;;972        return (ts_tmr_cnts);
;;;973    }
000004  4770              BX       lr
;;;974    #endif
                          ENDP

000006  0000              DCW      0x0000
                  |L8.8|
                          DCD      0xe0001000

;*** Start embedded assembler ***

#line 1 "..\\..\\BSP\\Board\\src\\bsp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_BSP_Init____REV16|
#line 388 "..\\..\\..\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_bsp_c_BSP_Init____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_BSP_Init____REVSH|
#line 402
|__asm___5_bsp_c_BSP_Init____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___5_bsp_c_BSP_Init____RRX|
#line 587
|__asm___5_bsp_c_BSP_Init____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
