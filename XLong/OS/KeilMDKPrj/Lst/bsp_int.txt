; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\bsp_int.o --asm_dir=.\Lst\ --list_dir=.\Lst\ --depend=.\obj\bsp_int.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I..\..\..\CMSIS\4.5.0\CMSIS\Include -I..\APP -I..\APP\ST -I..\APP\uCOS -I..\..\BSP\KeilMDK -I..\..\BSP\Board\inc -I..\..\BSP\STM32F4xx\inc -I..\..\BSP\Xlong\inc -I..\..\..\uCOS\uC-CPU -I..\..\..\uCOS\uC-CPU\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uC-LIB -I..\..\..\uCOS\uC-LIB\Ports\ARM-Cortex-M4 -I..\..\..\uCOS\uCOS-III\Source -I..\..\..\uCOS\uCOS-III\Ports\ARM-Cortex-M4 -IC:\Users\V200\Desktop\XLong\XLong\OS\KeilMDKPrj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\1.0.8\Device\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -DSTM32F427_437xx -DSTM32F427_437xx -DUSE_STDPERIPH_DRIVER --omf_browse=.\obj\bsp_int.crf ..\..\BSP\Board\src\bsp_int.c]
                          THUMB

                          AREA ||i.BSP_IntClr||, CODE, READONLY, ALIGN=1

                  BSP_IntClr PROC
;;;111    
;;;112    void  BSP_IntClr (CPU_DATA  int_id)
000000  4770              BX       lr
;;;113    {
;;;114    
;;;115    }
;;;116    
                          ENDP


                          AREA ||i.BSP_IntDis||, CODE, READONLY, ALIGN=1

                  BSP_IntDis PROC
;;;133    
;;;134    void  BSP_IntDis (CPU_DATA  int_id)
000000  b510              PUSH     {r4,lr}
;;;135    {
000002  4604              MOV      r4,r0
;;;136        if (int_id < BSP_INT_SRC_NBR) {
000004  2c5b              CMP      r4,#0x5b
000006  d204              BCS      |L2.18|
;;;137            CPU_IntSrcDis(int_id + 16);
000008  f1040110          ADD      r1,r4,#0x10
00000c  b2c8              UXTB     r0,r1
00000e  f7fffffe          BL       CPU_IntSrcDis
                  |L2.18|
;;;138        }
;;;139    }
000012  bd10              POP      {r4,pc}
;;;140    
                          ENDP


                          AREA ||i.BSP_IntDisAll||, CODE, READONLY, ALIGN=1

                  BSP_IntDisAll PROC
;;;157    
;;;158    void  BSP_IntDisAll (void)
000000  b510              PUSH     {r4,lr}
;;;159    {
;;;160        CPU_IntDis();
000002  f7fffffe          BL       CPU_IntDis
;;;161    }
000006  bd10              POP      {r4,pc}
;;;162    
                          ENDP


                          AREA ||i.BSP_IntEn||, CODE, READONLY, ALIGN=1

                  BSP_IntEn PROC
;;;179    
;;;180    void  BSP_IntEn (CPU_DATA  int_id)
000000  b510              PUSH     {r4,lr}
;;;181    {
000002  4604              MOV      r4,r0
;;;182        if (int_id < BSP_INT_SRC_NBR) {
000004  2c5b              CMP      r4,#0x5b
000006  d204              BCS      |L4.18|
;;;183            CPU_IntSrcEn(int_id + 16);
000008  f1040110          ADD      r1,r4,#0x10
00000c  b2c8              UXTB     r0,r1
00000e  f7fffffe          BL       CPU_IntSrcEn
                  |L4.18|
;;;184        }
;;;185    }
000012  bd10              POP      {r4,pc}
;;;186    
                          ENDP


                          AREA ||i.BSP_IntHandler||, CODE, READONLY, ALIGN=2

                  BSP_IntHandler PROC
;;;419    
;;;420    static  void  BSP_IntHandler (CPU_DATA  int_id)
000000  b570              PUSH     {r4-r6,lr}
;;;421    {
000002  4604              MOV      r4,r0
;;;422        CPU_FNCT_VOID  isr;
;;;423        CPU_SR_ALLOC();
000004  2600              MOVS     r6,#0
;;;424    
;;;425    
;;;426        CPU_CRITICAL_ENTER();                                       /* Tell the OS that we are starting an ISR            */
000006  bf00              NOP      
000008  bf00              NOP      
00000a  f7fffffe          BL       CPU_SR_Save
00000e  4606              MOV      r6,r0
000010  bf00              NOP      
000012  bf00              NOP      
;;;427    
;;;428        OSIntEnter();
000014  f7fffffe          BL       OSIntEnter
;;;429    
;;;430        CPU_CRITICAL_EXIT();
000018  bf00              NOP      
00001a  bf00              NOP      
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       CPU_SR_Restore
000022  bf00              NOP      
000024  bf00              NOP      
;;;431    
;;;432        if (int_id < BSP_INT_SRC_NBR) {
000026  2c5b              CMP      r4,#0x5b
000028  d204              BCS      |L5.52|
;;;433            isr = BSP_IntVectTbl[int_id];
00002a  4804              LDR      r0,|L5.60|
00002c  f8505024          LDR      r5,[r0,r4,LSL #2]
;;;434            if (isr != (CPU_FNCT_VOID)0) {
000030  b105              CBZ      r5,|L5.52|
;;;435                isr();
000032  47a8              BLX      r5
                  |L5.52|
;;;436            }
;;;437        }
;;;438    
;;;439        OSIntExit();                                                /* Tell the OS that we are leaving the ISR            */
000034  f7fffffe          BL       OSIntExit
;;;440    }
000038  bd70              POP      {r4-r6,pc}
;;;441    
                          ENDP

00003a  0000              DCW      0x0000
                  |L5.60|
                          DCD      BSP_IntVectTbl

                          AREA ||i.BSP_IntHandlerADC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerADC PROC
;;;320    void  BSP_IntHandlerDMA1_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);            }
;;;321    void  BSP_IntHandlerADC                (void)  { BSP_IntHandler(BSP_INT_ID_ADC);                 }
000000  b510              PUSH     {r4,lr}
000002  2012              MOVS     r0,#0x12
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;322    void  BSP_IntHandlerCAN1_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_RX0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_RX0 PROC
;;;322    void  BSP_IntHandlerCAN1_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);             }
;;;323    void  BSP_IntHandlerCAN1_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);            }
000000  b510              PUSH     {r4,lr}
000002  2014              MOVS     r0,#0x14
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;324    void  BSP_IntHandlerCAN1_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_RX1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_RX1 PROC
;;;323    void  BSP_IntHandlerCAN1_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);            }
;;;324    void  BSP_IntHandlerCAN1_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);            }
000000  b510              PUSH     {r4,lr}
000002  2015              MOVS     r0,#0x15
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;325    void  BSP_IntHandlerCAN1_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_SCE||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_SCE PROC
;;;324    void  BSP_IntHandlerCAN1_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX1);            }
;;;325    void  BSP_IntHandlerCAN1_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);            }
000000  b510              PUSH     {r4,lr}
000002  2016              MOVS     r0,#0x16
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;326    void  BSP_IntHandlerEXTI9_5            (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN1_TX||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN1_TX PROC
;;;321    void  BSP_IntHandlerADC                (void)  { BSP_IntHandler(BSP_INT_ID_ADC);                 }
;;;322    void  BSP_IntHandlerCAN1_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_TX);             }
000000  b510              PUSH     {r4,lr}
000002  2013              MOVS     r0,#0x13
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;323    void  BSP_IntHandlerCAN1_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_RX0);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_RX0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_RX0 PROC
;;;366    void  BSP_IntHandlerCAN2_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);             }
;;;367    void  BSP_IntHandlerCAN2_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);            }
000000  b510              PUSH     {r4,lr}
000002  2040              MOVS     r0,#0x40
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;368    void  BSP_IntHandlerCAN2_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_RX1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_RX1 PROC
;;;367    void  BSP_IntHandlerCAN2_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);            }
;;;368    void  BSP_IntHandlerCAN2_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);            }
000000  b510              PUSH     {r4,lr}
000002  2041              MOVS     r0,#0x41
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;369    void  BSP_IntHandlerCAN2_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_SCE||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_SCE PROC
;;;368    void  BSP_IntHandlerCAN2_RX1           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX1);            }
;;;369    void  BSP_IntHandlerCAN2_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);            }
000000  b510              PUSH     {r4,lr}
000002  2042              MOVS     r0,#0x42
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;370    void  BSP_IntHandlerOTG_FS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerCAN2_TX||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCAN2_TX PROC
;;;365    void  BSP_IntHandlerETHWakeup          (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);            }
;;;366    void  BSP_IntHandlerCAN2_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);             }
000000  b510              PUSH     {r4,lr}
000002  203f              MOVS     r0,#0x3f
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;367    void  BSP_IntHandlerCAN2_RX0           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_RX0);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerCRYP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerCRYP PROC
;;;381    void  BSP_IntHandlerDCMI               (void)  { BSP_IntHandler(BSP_INT_ID_DCMI);                }
;;;382    void  BSP_IntHandlerCRYP               (void)  { BSP_IntHandler(BSP_INT_ID_CRYP);                }
000000  b510              PUSH     {r4,lr}
000002  204f              MOVS     r0,#0x4f
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;383    void  BSP_IntHandlerHASH_RNG           (void)  { BSP_IntHandler(BSP_INT_ID_HASH_RNG);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDCMI||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDCMI PROC
;;;380    void  BSP_IntHandlerOTG_HS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS);              }
;;;381    void  BSP_IntHandlerDCMI               (void)  { BSP_IntHandler(BSP_INT_ID_DCMI);                }
000000  b510              PUSH     {r4,lr}
000002  204e              MOVS     r0,#0x4e
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;382    void  BSP_IntHandlerCRYP               (void)  { BSP_IntHandler(BSP_INT_ID_CRYP);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH0 PROC
;;;313    void  BSP_IntHandlerEXTI4              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);               }
;;;314    void  BSP_IntHandlerDMA1_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH0);            }
000000  b510              PUSH     {r4,lr}
000002  200b              MOVS     r0,#0xb
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;315    void  BSP_IntHandlerDMA1_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH1 PROC
;;;314    void  BSP_IntHandlerDMA1_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH0);            }
;;;315    void  BSP_IntHandlerDMA1_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);            }
000000  b510              PUSH     {r4,lr}
000002  200c              MOVS     r0,#0xc
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;316    void  BSP_IntHandlerDMA1_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH2 PROC
;;;315    void  BSP_IntHandlerDMA1_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH1);            }
;;;316    void  BSP_IntHandlerDMA1_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);            }
000000  b510              PUSH     {r4,lr}
000002  200d              MOVS     r0,#0xd
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;317    void  BSP_IntHandlerDMA1_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH3 PROC
;;;316    void  BSP_IntHandlerDMA1_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH2);            }
;;;317    void  BSP_IntHandlerDMA1_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);            }
000000  b510              PUSH     {r4,lr}
000002  200e              MOVS     r0,#0xe
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;318    void  BSP_IntHandlerDMA1_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH4 PROC
;;;317    void  BSP_IntHandlerDMA1_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH3);            }
;;;318    void  BSP_IntHandlerDMA1_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);            }
000000  b510              PUSH     {r4,lr}
000002  200f              MOVS     r0,#0xf
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;319    void  BSP_IntHandlerDMA1_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH5 PROC
;;;318    void  BSP_IntHandlerDMA1_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH4);            }
;;;319    void  BSP_IntHandlerDMA1_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);            }
000000  b510              PUSH     {r4,lr}
000002  2010              MOVS     r0,#0x10
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;320    void  BSP_IntHandlerDMA1_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_CH6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_CH6 PROC
;;;319    void  BSP_IntHandlerDMA1_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH5);            }
;;;320    void  BSP_IntHandlerDMA1_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH6);            }
000000  b510              PUSH     {r4,lr}
000002  2011              MOVS     r0,#0x11
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;321    void  BSP_IntHandlerADC                (void)  { BSP_IntHandler(BSP_INT_ID_ADC);                 }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA1_STREAM7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA1_STREAM7 PROC
;;;349    void  BSP_IntHandlerTIM8_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_CC);             }
;;;350    void  BSP_IntHandlerDMA1_STREAM7       (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_STREAM7);        }
000000  b510              PUSH     {r4,lr}
000002  202f              MOVS     r0,#0x2f
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;351    void  BSP_IntHandlerFSMC               (void)  { BSP_IntHandler(BSP_INT_ID_FSMC);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2D||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2D PROC
;;;392    void  BSP_IntHandlerLTDC_ER            (void)  { BSP_IntHandler(BSP_INT_ID_LTDC_ER);             }
;;;393    void  BSP_IntHandlerDMA2D              (void)  { BSP_IntHandler(BSP_INT_ID_DMA2D);               }
000000  b510              PUSH     {r4,lr}
000002  205a              MOVS     r0,#0x5a
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;394    
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH0 PROC
;;;358    void  BSP_IntHandlerTIM7               (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);                }
;;;359    void  BSP_IntHandlerDMA2_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH0);            }
000000  b510              PUSH     {r4,lr}
000002  2038              MOVS     r0,#0x38
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;360    void  BSP_IntHandlerDMA2_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH1 PROC
;;;359    void  BSP_IntHandlerDMA2_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH0);            }
;;;360    void  BSP_IntHandlerDMA2_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);            }
000000  b510              PUSH     {r4,lr}
000002  2039              MOVS     r0,#0x39
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;361    void  BSP_IntHandlerDMA2_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH2 PROC
;;;360    void  BSP_IntHandlerDMA2_CH1           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH1);            }
;;;361    void  BSP_IntHandlerDMA2_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);            }
000000  b510              PUSH     {r4,lr}
000002  203a              MOVS     r0,#0x3a
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;362    void  BSP_IntHandlerDMA2_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH3 PROC
;;;361    void  BSP_IntHandlerDMA2_CH2           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH2);            }
;;;362    void  BSP_IntHandlerDMA2_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);            }
000000  b510              PUSH     {r4,lr}
000002  203b              MOVS     r0,#0x3b
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;363    void  BSP_IntHandlerDMA2_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH4 PROC
;;;362    void  BSP_IntHandlerDMA2_CH3           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH3);            }
;;;363    void  BSP_IntHandlerDMA2_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);            }
000000  b510              PUSH     {r4,lr}
000002  203c              MOVS     r0,#0x3c
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;364    void  BSP_IntHandlerETH                (void)  { BSP_IntHandler(BSP_INT_ID_ETH);                 }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH5 PROC
;;;370    void  BSP_IntHandlerOTG_FS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS);              }
;;;371    void  BSP_IntHandlerDMA2_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);            }
000000  b510              PUSH     {r4,lr}
000002  2044              MOVS     r0,#0x44
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;372    void  BSP_IntHandlerDMA2_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH6);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH6 PROC
;;;371    void  BSP_IntHandlerDMA2_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);            }
;;;372    void  BSP_IntHandlerDMA2_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH6);            }
000000  b510              PUSH     {r4,lr}
000002  2045              MOVS     r0,#0x45
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;373    void  BSP_IntHandlerDMA2_CH7           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH7);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerDMA2_CH7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDMA2_CH7 PROC
;;;372    void  BSP_IntHandlerDMA2_CH6           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH6);            }
;;;373    void  BSP_IntHandlerDMA2_CH7           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH7);            }
000000  b510              PUSH     {r4,lr}
000002  2046              MOVS     r0,#0x46
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;374    void  BSP_IntHandlerUSART6             (void)  { BSP_IntHandler(BSP_INT_ID_USART6);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerDummy||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerDummy PROC
;;;458    
;;;459    static  void  BSP_IntHandlerDummy (void)
000000  4770              BX       lr
;;;460    {
;;;461    
;;;462    }
                          ENDP


                          AREA ||i.BSP_IntHandlerETH||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerETH PROC
;;;363    void  BSP_IntHandlerDMA2_CH4           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH4);            }
;;;364    void  BSP_IntHandlerETH                (void)  { BSP_IntHandler(BSP_INT_ID_ETH);                 }
000000  b510              PUSH     {r4,lr}
000002  203d              MOVS     r0,#0x3d
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;365    void  BSP_IntHandlerETHWakeup          (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerETHWakeup||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerETHWakeup PROC
;;;364    void  BSP_IntHandlerETH                (void)  { BSP_IntHandler(BSP_INT_ID_ETH);                 }
;;;365    void  BSP_IntHandlerETHWakeup          (void)  { BSP_IntHandler(BSP_INT_ID_ETH_WKUP);            }
000000  b510              PUSH     {r4,lr}
000002  203e              MOVS     r0,#0x3e
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;366    void  BSP_IntHandlerCAN2_TX            (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_TX);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI0||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI0 PROC
;;;308    void  BSP_IntHandlerRCC                (void)  { BSP_IntHandler(BSP_INT_ID_RCC);                 }
;;;309    void  BSP_IntHandlerEXTI0              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);               }
000000  b510              PUSH     {r4,lr}
000002  2006              MOVS     r0,#6
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;310    void  BSP_IntHandlerEXTI1              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI1 PROC
;;;309    void  BSP_IntHandlerEXTI0              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);               }
;;;310    void  BSP_IntHandlerEXTI1              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);               }
000000  b510              PUSH     {r4,lr}
000002  2007              MOVS     r0,#7
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;311    void  BSP_IntHandlerEXTI2              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI15_10||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI15_10 PROC
;;;342    void  BSP_IntHandlerUSART3             (void)  { BSP_IntHandler(BSP_INT_ID_USART3);              }
;;;343    void  BSP_IntHandlerEXTI15_10          (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);           }
000000  b510              PUSH     {r4,lr}
000002  2028              MOVS     r0,#0x28
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;344    void  BSP_IntHandlerRTCAlarm           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI2 PROC
;;;310    void  BSP_IntHandlerEXTI1              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI1);               }
;;;311    void  BSP_IntHandlerEXTI2              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);               }
000000  b510              PUSH     {r4,lr}
000002  2008              MOVS     r0,#8
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;312    void  BSP_IntHandlerEXTI3              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI3 PROC
;;;311    void  BSP_IntHandlerEXTI2              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI2);               }
;;;312    void  BSP_IntHandlerEXTI3              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);               }
000000  b510              PUSH     {r4,lr}
000002  2009              MOVS     r0,#9
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;313    void  BSP_IntHandlerEXTI4              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI4 PROC
;;;312    void  BSP_IntHandlerEXTI3              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI3);               }
;;;313    void  BSP_IntHandlerEXTI4              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI4);               }
000000  b510              PUSH     {r4,lr}
000002  200a              MOVS     r0,#0xa
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;314    void  BSP_IntHandlerDMA1_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_CH0);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerEXTI9_5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerEXTI9_5 PROC
;;;325    void  BSP_IntHandlerCAN1_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN1_SCE);            }
;;;326    void  BSP_IntHandlerEXTI9_5            (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);             }
000000  b510              PUSH     {r4,lr}
000002  2017              MOVS     r0,#0x17
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;327    void  BSP_IntHandlerTIM1_BRK_TIM9      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK_TIM9);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerFLASH||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerFLASH PROC
;;;306    void  BSP_IntHandlerRTC_WKUP           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_WKUP);            }
;;;307    void  BSP_IntHandlerFLASH              (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);               }
000000  b510              PUSH     {r4,lr}
000002  2004              MOVS     r0,#4
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;308    void  BSP_IntHandlerRCC                (void)  { BSP_IntHandler(BSP_INT_ID_RCC);                 }
                          ENDP


                          AREA ||i.BSP_IntHandlerFPU||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerFPU PROC
;;;383    void  BSP_IntHandlerHASH_RNG           (void)  { BSP_IntHandler(BSP_INT_ID_HASH_RNG);            }
;;;384    void  BSP_IntHandlerFPU                (void)  { BSP_IntHandler(BSP_INT_ID_FPU);                 }
000000  b510              PUSH     {r4,lr}
000002  2051              MOVS     r0,#0x51
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;385    void  BSP_IntHandlerUART7              (void)  { BSP_IntHandler(BSP_INT_ID_UART7);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerFSMC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerFSMC PROC
;;;350    void  BSP_IntHandlerDMA1_STREAM7       (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_STREAM7);        }
;;;351    void  BSP_IntHandlerFSMC               (void)  { BSP_IntHandler(BSP_INT_ID_FSMC);                }
000000  b510              PUSH     {r4,lr}
000002  2030              MOVS     r0,#0x30
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;352    void  BSP_IntHandlerSDIO               (void)  { BSP_IntHandler(BSP_INT_ID_SDIO);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerHASH_RNG||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerHASH_RNG PROC
;;;382    void  BSP_IntHandlerCRYP               (void)  { BSP_IntHandler(BSP_INT_ID_CRYP);                }
;;;383    void  BSP_IntHandlerHASH_RNG           (void)  { BSP_IntHandler(BSP_INT_ID_HASH_RNG);            }
000000  b510              PUSH     {r4,lr}
000002  2050              MOVS     r0,#0x50
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;384    void  BSP_IntHandlerFPU                (void)  { BSP_IntHandler(BSP_INT_ID_FPU);                 }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C1_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C1_ER PROC
;;;334    void  BSP_IntHandlerI2C1_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);             }
;;;335    void  BSP_IntHandlerI2C1_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);             }
000000  b510              PUSH     {r4,lr}
000002  2020              MOVS     r0,#0x20
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;336    void  BSP_IntHandlerI2C2_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C1_EV||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C1_EV PROC
;;;333    void  BSP_IntHandlerTIM4               (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);                }
;;;334    void  BSP_IntHandlerI2C1_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);             }
000000  b510              PUSH     {r4,lr}
000002  201f              MOVS     r0,#0x1f
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;335    void  BSP_IntHandlerI2C1_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C2_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C2_ER PROC
;;;336    void  BSP_IntHandlerI2C2_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);             }
;;;337    void  BSP_IntHandlerI2C2_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);             }
000000  b510              PUSH     {r4,lr}
000002  2022              MOVS     r0,#0x22
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;338    void  BSP_IntHandlerSPI1               (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C2_EV||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C2_EV PROC
;;;335    void  BSP_IntHandlerI2C1_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_ER);             }
;;;336    void  BSP_IntHandlerI2C2_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_EV);             }
000000  b510              PUSH     {r4,lr}
000002  2021              MOVS     r0,#0x21
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;337    void  BSP_IntHandlerI2C2_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C3_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C3_ER PROC
;;;375    void  BSP_IntHandlerI2C3_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_EV);             }
;;;376    void  BSP_IntHandlerI2C3_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_ER);             }
000000  b510              PUSH     {r4,lr}
000002  2049              MOVS     r0,#0x49
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;377    void  BSP_IntHandlerOTG_HS_EP1_OUT     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_OUT);      }
                          ENDP


                          AREA ||i.BSP_IntHandlerI2C3_EV||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerI2C3_EV PROC
;;;374    void  BSP_IntHandlerUSART6             (void)  { BSP_IntHandler(BSP_INT_ID_USART6);              }
;;;375    void  BSP_IntHandlerI2C3_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_EV);             }
000000  b510              PUSH     {r4,lr}
000002  2048              MOVS     r0,#0x48
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;376    void  BSP_IntHandlerI2C3_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_ER);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerLTDC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerLTDC PROC
;;;390    void  BSP_IntHandlerSAI1               (void)  { BSP_IntHandler(BSP_INT_ID_SAI1);                }
;;;391    void  BSP_IntHandlerLTDC               (void)  { BSP_IntHandler(BSP_INT_ID_LTDC);                }
000000  b510              PUSH     {r4,lr}
000002  2058              MOVS     r0,#0x58
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;392    void  BSP_IntHandlerLTDC_ER            (void)  { BSP_IntHandler(BSP_INT_ID_LTDC_ER);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerLTDC_ER||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerLTDC_ER PROC
;;;391    void  BSP_IntHandlerLTDC               (void)  { BSP_IntHandler(BSP_INT_ID_LTDC);                }
;;;392    void  BSP_IntHandlerLTDC_ER            (void)  { BSP_IntHandler(BSP_INT_ID_LTDC_ER);             }
000000  b510              PUSH     {r4,lr}
000002  2059              MOVS     r0,#0x59
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;393    void  BSP_IntHandlerDMA2D              (void)  { BSP_IntHandler(BSP_INT_ID_DMA2D);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_FS||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_FS PROC
;;;369    void  BSP_IntHandlerCAN2_SCE           (void)  { BSP_IntHandler(BSP_INT_ID_CAN2_SCE);            }
;;;370    void  BSP_IntHandlerOTG_FS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS);              }
000000  b510              PUSH     {r4,lr}
000002  2043              MOVS     r0,#0x43
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;371    void  BSP_IntHandlerDMA2_CH5           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH5);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_FS_WKUP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_FS_WKUP PROC
;;;344    void  BSP_IntHandlerRTCAlarm           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);           }
;;;345    void  BSP_IntHandlerOTG_FS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);         }
000000  b510              PUSH     {r4,lr}
000002  202a              MOVS     r0,#0x2a
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;346    void  BSP_IntHandlerTIM8_BRK_TIM12     (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_BRK_TIM12);      }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_HS||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_HS PROC
;;;379    void  BSP_IntHandlerOTG_HS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_WKUP);         }
;;;380    void  BSP_IntHandlerOTG_HS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS);              }
000000  b510              PUSH     {r4,lr}
000002  204d              MOVS     r0,#0x4d
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;381    void  BSP_IntHandlerDCMI               (void)  { BSP_IntHandler(BSP_INT_ID_DCMI);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_HS_EP1_IN||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_HS_EP1_IN PROC
;;;377    void  BSP_IntHandlerOTG_HS_EP1_OUT     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_OUT);      }
;;;378    void  BSP_IntHandlerOTG_HS_EP1_IN      (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_IN);       }
000000  b510              PUSH     {r4,lr}
000002  204b              MOVS     r0,#0x4b
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;379    void  BSP_IntHandlerOTG_HS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_WKUP);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_HS_EP1_OUT||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_HS_EP1_OUT PROC
;;;376    void  BSP_IntHandlerI2C3_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_ER);             }
;;;377    void  BSP_IntHandlerOTG_HS_EP1_OUT     (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_OUT);      }
000000  b510              PUSH     {r4,lr}
000002  204a              MOVS     r0,#0x4a
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;378    void  BSP_IntHandlerOTG_HS_EP1_IN      (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_IN);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerOTG_HS_WKUP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerOTG_HS_WKUP PROC
;;;378    void  BSP_IntHandlerOTG_HS_EP1_IN      (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_EP1_IN);       }
;;;379    void  BSP_IntHandlerOTG_HS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS_WKUP);         }
000000  b510              PUSH     {r4,lr}
000002  204c              MOVS     r0,#0x4c
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;380    void  BSP_IntHandlerOTG_HS             (void)  { BSP_IntHandler(BSP_INT_ID_OTG_HS);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerPVD||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerPVD PROC
;;;303    void  BSP_IntHandlerWWDG               (void)  { BSP_IntHandler(BSP_INT_ID_WWDG);                }
;;;304    void  BSP_IntHandlerPVD                (void)  { BSP_IntHandler(BSP_INT_ID_PVD);                 }
000000  b510              PUSH     {r4,lr}
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;305    void  BSP_IntHandlerTAMP_STAMP         (void)  { BSP_IntHandler(BSP_INT_ID_TAMP_STAMP);          }
                          ENDP


                          AREA ||i.BSP_IntHandlerRCC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRCC PROC
;;;307    void  BSP_IntHandlerFLASH              (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);               }
;;;308    void  BSP_IntHandlerRCC                (void)  { BSP_IntHandler(BSP_INT_ID_RCC);                 }
000000  b510              PUSH     {r4,lr}
000002  2005              MOVS     r0,#5
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;309    void  BSP_IntHandlerEXTI0              (void)  { BSP_IntHandler(BSP_INT_ID_EXTI0);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerRTCAlarm||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRTCAlarm PROC
;;;343    void  BSP_IntHandlerEXTI15_10          (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);           }
;;;344    void  BSP_IntHandlerRTCAlarm           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_ALARM);           }
000000  b510              PUSH     {r4,lr}
000002  2029              MOVS     r0,#0x29
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;345    void  BSP_IntHandlerOTG_FS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);         }
                          ENDP


                          AREA ||i.BSP_IntHandlerRTC_WKUP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerRTC_WKUP PROC
;;;305    void  BSP_IntHandlerTAMP_STAMP         (void)  { BSP_IntHandler(BSP_INT_ID_TAMP_STAMP);          }
;;;306    void  BSP_IntHandlerRTC_WKUP           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_WKUP);            }
000000  b510              PUSH     {r4,lr}
000002  2003              MOVS     r0,#3
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;307    void  BSP_IntHandlerFLASH              (void)  { BSP_IntHandler(BSP_INT_ID_FLASH);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerSAI1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSAI1 PROC
;;;389    void  BSP_IntHandlerSPI6               (void)  { BSP_IntHandler(BSP_INT_ID_SPI6);                }
;;;390    void  BSP_IntHandlerSAI1               (void)  { BSP_IntHandler(BSP_INT_ID_SAI1);                }
000000  b510              PUSH     {r4,lr}
000002  2057              MOVS     r0,#0x57
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;391    void  BSP_IntHandlerLTDC               (void)  { BSP_IntHandler(BSP_INT_ID_LTDC);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerSDIO||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSDIO PROC
;;;351    void  BSP_IntHandlerFSMC               (void)  { BSP_IntHandler(BSP_INT_ID_FSMC);                }
;;;352    void  BSP_IntHandlerSDIO               (void)  { BSP_IntHandler(BSP_INT_ID_SDIO);                }
000000  b510              PUSH     {r4,lr}
000002  2031              MOVS     r0,#0x31
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;353    void  BSP_IntHandlerTIM5               (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI1 PROC
;;;337    void  BSP_IntHandlerI2C2_ER            (void)  { BSP_IntHandler(BSP_INT_ID_I2C2_ER);             }
;;;338    void  BSP_IntHandlerSPI1               (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);                }
000000  b510              PUSH     {r4,lr}
000002  2023              MOVS     r0,#0x23
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;339    void  BSP_IntHandlerSPI2               (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI2 PROC
;;;338    void  BSP_IntHandlerSPI1               (void)  { BSP_IntHandler(BSP_INT_ID_SPI1);                }
;;;339    void  BSP_IntHandlerSPI2               (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);                }
000000  b510              PUSH     {r4,lr}
000002  2024              MOVS     r0,#0x24
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;340    void  BSP_IntHandlerUSART1             (void)  { BSP_IntHandler(BSP_INT_ID_USART1);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI3 PROC
;;;353    void  BSP_IntHandlerTIM5               (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);                }
;;;354    void  BSP_IntHandlerSPI3               (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);                }
000000  b510              PUSH     {r4,lr}
000002  2033              MOVS     r0,#0x33
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;355    void  BSP_IntHandlerUSART4             (void)  { BSP_IntHandler(BSP_INT_ID_USART4);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI4 PROC
;;;386    void  BSP_IntHandlerUART8              (void)  { BSP_IntHandler(BSP_INT_ID_UART8);               }
;;;387    void  BSP_IntHandlerSPI4               (void)  { BSP_IntHandler(BSP_INT_ID_SPI4);                }
000000  b510              PUSH     {r4,lr}
000002  2054              MOVS     r0,#0x54
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;388    void  BSP_IntHandlerSPI5               (void)  { BSP_IntHandler(BSP_INT_ID_SPI5);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI5 PROC
;;;387    void  BSP_IntHandlerSPI4               (void)  { BSP_IntHandler(BSP_INT_ID_SPI4);                }
;;;388    void  BSP_IntHandlerSPI5               (void)  { BSP_IntHandler(BSP_INT_ID_SPI5);                }
000000  b510              PUSH     {r4,lr}
000002  2055              MOVS     r0,#0x55
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;389    void  BSP_IntHandlerSPI6               (void)  { BSP_IntHandler(BSP_INT_ID_SPI6);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerSPI6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerSPI6 PROC
;;;388    void  BSP_IntHandlerSPI5               (void)  { BSP_IntHandler(BSP_INT_ID_SPI5);                }
;;;389    void  BSP_IntHandlerSPI6               (void)  { BSP_IntHandler(BSP_INT_ID_SPI6);                }
000000  b510              PUSH     {r4,lr}
000002  2056              MOVS     r0,#0x56
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;390    void  BSP_IntHandlerSAI1               (void)  { BSP_IntHandler(BSP_INT_ID_SAI1);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTAMP_STAMP||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTAMP_STAMP PROC
;;;304    void  BSP_IntHandlerPVD                (void)  { BSP_IntHandler(BSP_INT_ID_PVD);                 }
;;;305    void  BSP_IntHandlerTAMP_STAMP         (void)  { BSP_IntHandler(BSP_INT_ID_TAMP_STAMP);          }
000000  b510              PUSH     {r4,lr}
000002  2002              MOVS     r0,#2
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;306    void  BSP_IntHandlerRTC_WKUP           (void)  { BSP_IntHandler(BSP_INT_ID_RTC_WKUP);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_BRK_TIM9||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_BRK_TIM9 PROC
;;;326    void  BSP_IntHandlerEXTI9_5            (void)  { BSP_IntHandler(BSP_INT_ID_EXTI9_5);             }
;;;327    void  BSP_IntHandlerTIM1_BRK_TIM9      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK_TIM9);       }
000000  b510              PUSH     {r4,lr}
000002  2018              MOVS     r0,#0x18
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;328    void  BSP_IntHandlerTIM1_UP_TIM10      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP_TIM10);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_CC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_CC PROC
;;;329    void  BSP_IntHandlerTIM1_TRG_COM_TIM11 (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM_TIM11);  }
;;;330    void  BSP_IntHandlerTIM1_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);             }
000000  b510              PUSH     {r4,lr}
000002  201b              MOVS     r0,#0x1b
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;331    void  BSP_IntHandlerTIM2               (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_TRG_COM_TIM11||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_TRG_COM_TIM11 PROC
;;;328    void  BSP_IntHandlerTIM1_UP_TIM10      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP_TIM10);       }
;;;329    void  BSP_IntHandlerTIM1_TRG_COM_TIM11 (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM_TIM11);  }
000000  b510              PUSH     {r4,lr}
000002  201a              MOVS     r0,#0x1a
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;330    void  BSP_IntHandlerTIM1_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM1_UP_TIM10||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM1_UP_TIM10 PROC
;;;327    void  BSP_IntHandlerTIM1_BRK_TIM9      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_BRK_TIM9);       }
;;;328    void  BSP_IntHandlerTIM1_UP_TIM10      (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_UP_TIM10);       }
000000  b510              PUSH     {r4,lr}
000002  2019              MOVS     r0,#0x19
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;329    void  BSP_IntHandlerTIM1_TRG_COM_TIM11 (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_TRG_COM_TIM11);  }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM2 PROC
;;;330    void  BSP_IntHandlerTIM1_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM1_CC);             }
;;;331    void  BSP_IntHandlerTIM2               (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);                }
000000  b510              PUSH     {r4,lr}
000002  201c              MOVS     r0,#0x1c
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;332    void  BSP_IntHandlerTIM3               (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM3 PROC
;;;331    void  BSP_IntHandlerTIM2               (void)  { BSP_IntHandler(BSP_INT_ID_TIM2);                }
;;;332    void  BSP_IntHandlerTIM3               (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);                }
000000  b510              PUSH     {r4,lr}
000002  201d              MOVS     r0,#0x1d
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;333    void  BSP_IntHandlerTIM4               (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM4 PROC
;;;332    void  BSP_IntHandlerTIM3               (void)  { BSP_IntHandler(BSP_INT_ID_TIM3);                }
;;;333    void  BSP_IntHandlerTIM4               (void)  { BSP_IntHandler(BSP_INT_ID_TIM4);                }
000000  b510              PUSH     {r4,lr}
000002  201e              MOVS     r0,#0x1e
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;334    void  BSP_IntHandlerI2C1_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C1_EV);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM5 PROC
;;;352    void  BSP_IntHandlerSDIO               (void)  { BSP_IntHandler(BSP_INT_ID_SDIO);                }
;;;353    void  BSP_IntHandlerTIM5               (void)  { BSP_IntHandler(BSP_INT_ID_TIM5);                }
000000  b510              PUSH     {r4,lr}
000002  2032              MOVS     r0,#0x32
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;354    void  BSP_IntHandlerSPI3               (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM6_DAC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM6_DAC PROC
;;;356    void  BSP_IntHandlerUSART5             (void)  { BSP_IntHandler(BSP_INT_ID_USART5);              }
;;;357    void  BSP_IntHandlerTIM6_DAC           (void)  { BSP_IntHandler(BSP_INT_ID_TIM6_DAC);            }
000000  b510              PUSH     {r4,lr}
000002  2036              MOVS     r0,#0x36
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;358    void  BSP_IntHandlerTIM7               (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM7 PROC
;;;357    void  BSP_IntHandlerTIM6_DAC           (void)  { BSP_IntHandler(BSP_INT_ID_TIM6_DAC);            }
;;;358    void  BSP_IntHandlerTIM7               (void)  { BSP_IntHandler(BSP_INT_ID_TIM7);                }
000000  b510              PUSH     {r4,lr}
000002  2037              MOVS     r0,#0x37
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;359    void  BSP_IntHandlerDMA2_CH0           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH0);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM8_BRK_TIM12||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM8_BRK_TIM12 PROC
;;;345    void  BSP_IntHandlerOTG_FS_WKUP        (void)  { BSP_IntHandler(BSP_INT_ID_OTG_FS_WKUP);         }
;;;346    void  BSP_IntHandlerTIM8_BRK_TIM12     (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_BRK_TIM12);      }
000000  b510              PUSH     {r4,lr}
000002  202b              MOVS     r0,#0x2b
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;347    void  BSP_IntHandlerTIM8_UP_TIM13      (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_UP_TIM13);       }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM8_CC||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM8_CC PROC
;;;348    void  BSP_IntHandlerTIM8_TRG_COM_TIM14 (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_TRG_COM_TIM14);  }
;;;349    void  BSP_IntHandlerTIM8_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_CC);             }
000000  b510              PUSH     {r4,lr}
000002  202e              MOVS     r0,#0x2e
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;350    void  BSP_IntHandlerDMA1_STREAM7       (void)  { BSP_IntHandler(BSP_INT_ID_DMA1_STREAM7);        }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM8_TRG_COM_TIM14||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM8_TRG_COM_TIM14 PROC
;;;347    void  BSP_IntHandlerTIM8_UP_TIM13      (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_UP_TIM13);       }
;;;348    void  BSP_IntHandlerTIM8_TRG_COM_TIM14 (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_TRG_COM_TIM14);  }
000000  b510              PUSH     {r4,lr}
000002  202d              MOVS     r0,#0x2d
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;349    void  BSP_IntHandlerTIM8_CC            (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_CC);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerTIM8_UP_TIM13||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerTIM8_UP_TIM13 PROC
;;;346    void  BSP_IntHandlerTIM8_BRK_TIM12     (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_BRK_TIM12);      }
;;;347    void  BSP_IntHandlerTIM8_UP_TIM13      (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_UP_TIM13);       }
000000  b510              PUSH     {r4,lr}
000002  202c              MOVS     r0,#0x2c
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;348    void  BSP_IntHandlerTIM8_TRG_COM_TIM14 (void)  { BSP_IntHandler(BSP_INT_ID_TIM8_TRG_COM_TIM14);  }
                          ENDP


                          AREA ||i.BSP_IntHandlerUART7||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUART7 PROC
;;;384    void  BSP_IntHandlerFPU                (void)  { BSP_IntHandler(BSP_INT_ID_FPU);                 }
;;;385    void  BSP_IntHandlerUART7              (void)  { BSP_IntHandler(BSP_INT_ID_UART7);               }
000000  b510              PUSH     {r4,lr}
000002  2052              MOVS     r0,#0x52
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;386    void  BSP_IntHandlerUART8              (void)  { BSP_IntHandler(BSP_INT_ID_UART8);               }
                          ENDP


                          AREA ||i.BSP_IntHandlerUART8||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUART8 PROC
;;;385    void  BSP_IntHandlerUART7              (void)  { BSP_IntHandler(BSP_INT_ID_UART7);               }
;;;386    void  BSP_IntHandlerUART8              (void)  { BSP_IntHandler(BSP_INT_ID_UART8);               }
000000  b510              PUSH     {r4,lr}
000002  2053              MOVS     r0,#0x53
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;387    void  BSP_IntHandlerSPI4               (void)  { BSP_IntHandler(BSP_INT_ID_SPI4);                }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART1||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART1 PROC
;;;339    void  BSP_IntHandlerSPI2               (void)  { BSP_IntHandler(BSP_INT_ID_SPI2);                }
;;;340    void  BSP_IntHandlerUSART1             (void)  { BSP_IntHandler(BSP_INT_ID_USART1);              }
000000  b510              PUSH     {r4,lr}
000002  2025              MOVS     r0,#0x25
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;341    void  BSP_IntHandlerUSART2             (void)  { BSP_IntHandler(BSP_INT_ID_USART2);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART2||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART2 PROC
;;;340    void  BSP_IntHandlerUSART1             (void)  { BSP_IntHandler(BSP_INT_ID_USART1);              }
;;;341    void  BSP_IntHandlerUSART2             (void)  { BSP_IntHandler(BSP_INT_ID_USART2);              }
000000  b510              PUSH     {r4,lr}
000002  2026              MOVS     r0,#0x26
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;342    void  BSP_IntHandlerUSART3             (void)  { BSP_IntHandler(BSP_INT_ID_USART3);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART3||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART3 PROC
;;;341    void  BSP_IntHandlerUSART2             (void)  { BSP_IntHandler(BSP_INT_ID_USART2);              }
;;;342    void  BSP_IntHandlerUSART3             (void)  { BSP_IntHandler(BSP_INT_ID_USART3);              }
000000  b510              PUSH     {r4,lr}
000002  2027              MOVS     r0,#0x27
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;343    void  BSP_IntHandlerEXTI15_10          (void)  { BSP_IntHandler(BSP_INT_ID_EXTI15_10);           }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART4||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART4 PROC
;;;354    void  BSP_IntHandlerSPI3               (void)  { BSP_IntHandler(BSP_INT_ID_SPI3);                }
;;;355    void  BSP_IntHandlerUSART4             (void)  { BSP_IntHandler(BSP_INT_ID_USART4);              }
000000  b510              PUSH     {r4,lr}
000002  2034              MOVS     r0,#0x34
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;356    void  BSP_IntHandlerUSART5             (void)  { BSP_IntHandler(BSP_INT_ID_USART5);              }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART5||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART5 PROC
;;;355    void  BSP_IntHandlerUSART4             (void)  { BSP_IntHandler(BSP_INT_ID_USART4);              }
;;;356    void  BSP_IntHandlerUSART5             (void)  { BSP_IntHandler(BSP_INT_ID_USART5);              }
000000  b510              PUSH     {r4,lr}
000002  2035              MOVS     r0,#0x35
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;357    void  BSP_IntHandlerTIM6_DAC           (void)  { BSP_IntHandler(BSP_INT_ID_TIM6_DAC);            }
                          ENDP


                          AREA ||i.BSP_IntHandlerUSART6||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerUSART6 PROC
;;;373    void  BSP_IntHandlerDMA2_CH7           (void)  { BSP_IntHandler(BSP_INT_ID_DMA2_CH7);            }
;;;374    void  BSP_IntHandlerUSART6             (void)  { BSP_IntHandler(BSP_INT_ID_USART6);              }
000000  b510              PUSH     {r4,lr}
000002  2047              MOVS     r0,#0x47
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;375    void  BSP_IntHandlerI2C3_EV            (void)  { BSP_IntHandler(BSP_INT_ID_I2C3_EV);             }
                          ENDP


                          AREA ||i.BSP_IntHandlerWWDG||, CODE, READONLY, ALIGN=1

                  BSP_IntHandlerWWDG PROC
;;;302    
;;;303    void  BSP_IntHandlerWWDG               (void)  { BSP_IntHandler(BSP_INT_ID_WWDG);                }
000000  b510              PUSH     {r4,lr}
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       BSP_IntHandler
000008  bd10              POP      {r4,pc}
;;;304    void  BSP_IntHandlerPVD                (void)  { BSP_IntHandler(BSP_INT_ID_PVD);                 }
                          ENDP


                          AREA ||i.BSP_IntInit||, CODE, READONLY, ALIGN=2

                  BSP_IntInit PROC
;;;275    
;;;276    void  BSP_IntInit (void)
000000  b510              PUSH     {r4,lr}
;;;277    {
;;;278        CPU_DATA  int_id;
;;;279    
;;;280    
;;;281        for (int_id = 0; int_id < BSP_INT_SRC_NBR; int_id++) {
000002  2400              MOVS     r4,#0
000004  e004              B        |L98.16|
                  |L98.6|
;;;282            BSP_IntVectSet(int_id, BSP_IntHandlerDummy);
000006  4904              LDR      r1,|L98.24|
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       BSP_IntVectSet
00000e  1c64              ADDS     r4,r4,#1              ;281
                  |L98.16|
000010  2c5b              CMP      r4,#0x5b              ;281
000012  d3f8              BCC      |L98.6|
;;;283        }
;;;284    }
000014  bd10              POP      {r4,pc}
;;;285    
                          ENDP

000016  0000              DCW      0x0000
                  |L98.24|
                          DCD      BSP_IntHandlerDummy

                          AREA ||i.BSP_IntPrioSet||, CODE, READONLY, ALIGN=1

                  BSP_IntPrioSet PROC
;;;237    
;;;238    void  BSP_IntPrioSet (CPU_DATA    int_id,
000000  b570              PUSH     {r4-r6,lr}
;;;239                          CPU_INT08U  prio)
;;;240    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;241        CPU_SR_ALLOC();
000006  2600              MOVS     r6,#0
;;;242    
;;;243    
;;;244        if (int_id < BSP_INT_SRC_NBR) {
000008  2c5b              CMP      r4,#0x5b
00000a  d213              BCS      |L99.52|
;;;245            CPU_CRITICAL_ENTER();
00000c  bf00              NOP      
00000e  bf00              NOP      
000010  f7fffffe          BL       CPU_SR_Save
000014  4606              MOV      r6,r0
000016  bf00              NOP      
000018  bf00              NOP      
;;;246            CPU_IntSrcPrioSet(int_id + 16, prio);
00001a  f1040110          ADD      r1,r4,#0x10
00001e  b2c8              UXTB     r0,r1
000020  4629              MOV      r1,r5
000022  f7fffffe          BL       CPU_IntSrcPrioSet
;;;247            CPU_CRITICAL_EXIT();
000026  bf00              NOP      
000028  bf00              NOP      
00002a  4630              MOV      r0,r6
00002c  f7fffffe          BL       CPU_SR_Restore
000030  bf00              NOP      
000032  bf00              NOP      
                  |L99.52|
;;;248        }
;;;249    }
000034  bd70              POP      {r4-r6,pc}
;;;250    
                          ENDP


                          AREA ||i.BSP_IntVectSet||, CODE, READONLY, ALIGN=2

                  BSP_IntVectSet PROC
;;;205    
;;;206    void  BSP_IntVectSet (CPU_DATA       int_id,
000000  b570              PUSH     {r4-r6,lr}
;;;207                          CPU_FNCT_VOID  isr)
;;;208    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;209        CPU_SR_ALLOC();
000006  2600              MOVS     r6,#0
;;;210    
;;;211    
;;;212        if (int_id < BSP_INT_SRC_NBR) {
000008  2c5b              CMP      r4,#0x5b
00000a  d210              BCS      |L100.46|
;;;213            CPU_CRITICAL_ENTER();
00000c  bf00              NOP      
00000e  bf00              NOP      
000010  f7fffffe          BL       CPU_SR_Save
000014  4606              MOV      r6,r0
000016  bf00              NOP      
000018  bf00              NOP      
;;;214            BSP_IntVectTbl[int_id] = isr;
00001a  4805              LDR      r0,|L100.48|
00001c  f8405024          STR      r5,[r0,r4,LSL #2]
;;;215            CPU_CRITICAL_EXIT();
000020  bf00              NOP      
000022  bf00              NOP      
000024  4630              MOV      r0,r6
000026  f7fffffe          BL       CPU_SR_Restore
00002a  bf00              NOP      
00002c  bf00              NOP      
                  |L100.46|
;;;216        }
;;;217    }
00002e  bd70              POP      {r4-r6,pc}
;;;218    
                          ENDP

                  |L100.48|
                          DCD      BSP_IntVectTbl

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  BSP_IntVectTbl
                          %        364

;*** Start embedded assembler ***

#line 1 "..\\..\\BSP\\Board\\src\\bsp_int.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_int_c_5d360aa1____REV16|
#line 388 "..\\..\\..\\CMSIS\\4.5.0\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___9_bsp_int_c_5d360aa1____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_int_c_5d360aa1____REVSH|
#line 402
|__asm___9_bsp_int_c_5d360aa1____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___9_bsp_int_c_5d360aa1____RRX|
#line 587
|__asm___9_bsp_int_c_5d360aa1____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
